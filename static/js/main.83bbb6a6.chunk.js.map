{"version":3,"sources":["components/Upload/Upload.module.css","components/Login/Login.module.css","components/Search/Search.module.css","components/Chat/Chat.module.css","components/TextComment/TextComment.module.css","components/VoiceRecording/VoiceRecording.module.css","components/Queue/Queue.module.css","components/QueueItem/QueueItem.module.css","config/global.js","utils/network.js","components/Chat/network.js","config/api.js","components/TextComment/network.js","components/VoiceRecording/network.js","components/TextComment/TextComment.js","components/VoiceRecording/VoiceRecording.js","components/Chat/Chat.js","config/model.js","components/Login/network.js","components/Login/Login.js","components/Queue/network.js","components/QueueItem/QueueItem.js","components/Queue/Queue.js","components/Search/network.js","components/SearchResult/SearchResult.js","components/Search/Search.js","components/Upload/network.js","components/Upload/Upload.js","components/Player/network.js","components/Player/Player.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BACKEND_DOMAIN","TYPE_GET","TYPE_POST","fetchBackend","a","method","url","data","formData","FormData","Object","entries","key","value","append","requestOptions","headers","token","localStorage","getItem","Authorization","request","Request","fetch","mode","body","response","searchParams","URLSearchParams","set","getUrl","toString","fetchCreateTextComment","text","json","responseJson","fetchTextComments","fetchVoiceRecordings","fetchDeleteTextComment","textCommentUuid","fetchCreateTextCommentModification","style","anchorOffset","focusOffset","fetchListDeleteTextCommentModifications","fetchDeleteVoiceRecording","voiceRecordingUuid","TextComment","props","selectableRef","React","createRef","state","modifications","selectableIsShowable","handleDelete","bind","handleUnderline","handleStrikethrough","handleHighlight","onTextSelect","onTextUnselect","renderTextComment","event","preventDefault","this","uuid","destroy","create","setState","selection","window","getSelection","anchorNode","focusNode","offset","parseInt","parentNode","getAttribute","annotation","_svg","zIndex","textComment","textCommentText","startOffset","textCommentHtml","i","length","modification","regSubString","substring","startPtr","styledSubString","endPtr","className","styles","Notated","show","multiline","color","type","animate","getAnnotationObject","updateZIndex","ref","selectionRef","isOpen","onSubmit","e","onClick","destroyModifications","Component","defaultProps","VoiceRecording","voiceRecording","transcriptFinal","Chat","errorMessage","_textComments","undefined","_voiceRecordings","feed","handleChange","buildFeed","destroyFeedItem","destroyTextCommentModifications","destroyTextComment","destroyVoiceRecording","createTextComment","createTextCommentModification","textCommentsResponse","system","status","message","voiceRecordingsResponse","obj","target","name","textComments","voiceRecordings","Array","isArray","sort","b","timestampMilliseconds","filteredTextComments","filter","filteredVoiceRecordings","textCommentIndex","findIndex","t","textCommentsCopy","push","textCommentModification","modificationsCopy","sortedModifications","map","index","class","CreateTextComment","placeholder","onChange","fetchAuthToken","username","password","Login","rememberMe","handleSubmit","access","refresh","setItem","to","FormBlock","fetchListQueues","fetchDeleteQueue","queueUuid","QueueItem","reveal","toggleReveal","queue","indent","repeat","depth","isDeleted","trackName","collectionName","destroyChild","parentQueueUuid","children","Queue","queues","destroyQueueItem","destroyChildQueueItem","jsonResponse","lastQueueUuid","filteredQueues","childQueueUuid","queuesCopy","parentIndex","filteredChildren","fetchSearchMusicLibrary","query","providerSpotify","providerYouTube","providerJukeboxRadio","formatTrack","formatAlbum","formatPlaylist","formatVideo","fetchCreateQueue","genericUuid","prevQueueUuid","nextQueueUuid","SearchResult","searchResult","provider","format","addToQueue","Search","searchResults","spotify","youTube","jukeboxRadio","track","album","playlist","video","handleCheckboxChange","split","key0","key1","val","checked","fetchCreateTrack","audioFile","imageFile","artistName","albumName","Upload","handleFileChange","files","fetchStream","fetchNextTrack","fetchPauseTrack","fetchPlayTrack","fetchPreviousTrack","fetchScanBackward","fetchScanForward","Player","progress","_nextTrackScheduledAt","stream","getStream","animateProgressBar","scheduleNextTrack","handlePrevTrack","handleNextTrack","handlePlayTrack","handlePauseTrack","handleScanBackward","handleScanForward","loop","nowPlaying","isPlaying","isPaused","Date","getTime","playedAt","durationMilliseconds","requestAnimationFrame","pausedAt","nextTrackScheduledAt","clearTimeout","setTimeout","console","log","date","epochNow","proposedPlayedAt","Math","floor","max","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83bbb6a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Upload\":\"Upload_Upload__tMDig\",\"FormBlock\":\"Upload_FormBlock__2ls6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1ujut\",\"FormBlock\":\"Login_FormBlock__S_rix\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"FormBlock\":\"Search_FormBlock__3ZZZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__3NjUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextComment\":\"TextComment_TextComment__15QHu\",\"Notated\":\"TextComment_Notated__24bZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VoiceRecording\":\"VoiceRecording_VoiceRecording__10J4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Queue\":\"Queue_Queue__YTCBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueueItem\":\"QueueItem_QueueItem__e3nEn\"};","const BACKEND_DOMAIN = 'http://localhost:3000';\nconst TYPE_GET = 'GET';\nconst TYPE_POST = 'POST';\n\nexport { BACKEND_DOMAIN, TYPE_GET, TYPE_POST }\n","import { BACKEND_DOMAIN } from '../config/global'\n\n\nasync function fetchBackend(method = '', url = '', data = {}) {\n  let response;\n\n  url = BACKEND_DOMAIN + url;\n\n  if(method !== 'GET') {\n\n    // aggregate form data in one place\n    const formData = new FormData();\n    for (const [key, value] of Object.entries(data)) {\n      formData.append(key, value);\n    }\n    // for (const [key, value] of Object.entries(files)) {\n    //   formData.append(key, value);\n    // }\n\n    // authenticate request if possible\n    let requestOptions = {headers: {}}\n    const token = localStorage.getItem('accessToken');\n    if(token) {\n      requestOptions.headers.Authorization = `Bearer ${token}`;\n    }\n    const request = new Request(url, requestOptions);\n\n    // make the request\n    response = await fetch(request, {\n      method: method,\n      mode: 'cors',\n      body: formData,\n    });\n  } else {\n\n    // translate form data for GET\n    let searchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(data)) {\n      searchParams.set(key, value);\n    }\n    const getUrl = url + '/?' + searchParams.toString();\n\n    // authenticate request if possible\n    let requestOptions = {headers: {'Content-Type': 'application/json'}}\n    const token = localStorage.getItem('accessToken');\n    if(token) {\n      requestOptions.headers.Authorization = `Bearer ${token}`;\n    }\n    const request = new Request(getUrl, requestOptions);\n\n    // make the request\n    response = await fetch(request, {\n      method: method,\n      mode: 'cors',\n    });\n  }\n\n  return response;\n}\n\nexport { fetchBackend }\n","import {\n  ENDPOINT_CREATE_TEXT_COMMENT,\n  ENDPOINT_LIST_TEXT_COMMENTS,\n  ENDPOINT_LIST_VOICE_RECORDINGS\n} from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nconst fetchCreateTextComment = async (text) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_TEXT_COMMENT,\n    {text: text},\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchTextComments = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_LIST_TEXT_COMMENTS\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchVoiceRecordings = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_LIST_VOICE_RECORDINGS\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\nexport { fetchCreateTextComment, fetchTextComments, fetchVoiceRecordings }\n","const ENDPOINT_OBTAIN_AUTH_TOKEN = '/auth/obtain-tokens/'\nconst ENDPOINT_REFRESH_AUTH_TOKEN = '/auth/refresh-token/'\nconst ENDPOINT_VERIFY_TOKEN = '/auth/verify-token/'\n\nconst ENDPOINT_CREATE_TEXT_COMMENT = '/comments/text-comment/create/'\nconst ENDPOINT_LIST_TEXT_COMMENTS = '/comments/text-comment/list'\nconst ENDPOINT_UPDATE_TEXT_COMMENT = '/comments/text-comment/update/'\nconst ENDPOINT_DELETE_TEXT_COMMENT = '/comments/text-comment/delete/'\n\nconst ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION = '/comments/text-comment-modification/create/'\nconst ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS = '/comments/text-comment-modification/list-delete/'\n\nconst ENDPOINT_LIST_VOICE_RECORDINGS = '/comments/voice-recording/list'\nconst ENDPOINT_DELETE_VOICE_RECORDING = '/comments/voice-recording/delete/'\n\nconst ENDPOINT_LIST_QUEUES = '/streams/queue/list'\nconst ENDPOINT_DELETE_QUEUE = '/streams/queue/delete/'\n\nconst ENDPOINT_CREATE_TRACK = '/music/track/create/'\nconst ENDPOINT_SEARCH_MUSIC = '/music/search'\n\nconst ENDPOINT_CREATE_QUEUE = '/streams/queue/create/'\n\nconst ENDPOINT_GET_STREAM = '/streams/stream/get'\nconst ENDPOINT_NEXT_TRACK = '/streams/stream/next-track/'\nconst ENDPOINT_PAUSE_TRACK = '/streams/stream/pause-track/'\nconst ENDPOINT_PLAY_TRACK = '/streams/stream/play-track/'\nconst ENDPOINT_PREVIOUS_TRACK = '/streams/stream/previous-track/'\nconst ENDPOINT_SCAN_BACKWARD = '/streams/stream/scan-backward/'\nconst ENDPOINT_SCAN_FORWARD = '/streams/stream/scan-forward/'\n\nexport {\n  ENDPOINT_OBTAIN_AUTH_TOKEN,\n  ENDPOINT_REFRESH_AUTH_TOKEN,\n  ENDPOINT_VERIFY_TOKEN,\n\n  ENDPOINT_CREATE_TEXT_COMMENT,\n  ENDPOINT_LIST_TEXT_COMMENTS,\n  ENDPOINT_UPDATE_TEXT_COMMENT,\n  ENDPOINT_DELETE_TEXT_COMMENT,\n\n  ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION,\n  ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS,\n\n  ENDPOINT_LIST_VOICE_RECORDINGS,\n  ENDPOINT_DELETE_VOICE_RECORDING,\n\n  ENDPOINT_LIST_QUEUES,\n  ENDPOINT_DELETE_QUEUE,\n\n  ENDPOINT_CREATE_TRACK,\n  ENDPOINT_SEARCH_MUSIC,\n\n  ENDPOINT_CREATE_QUEUE,\n\n  ENDPOINT_GET_STREAM,\n  ENDPOINT_NEXT_TRACK,\n  ENDPOINT_PAUSE_TRACK,\n  ENDPOINT_PLAY_TRACK,\n  ENDPOINT_PREVIOUS_TRACK,\n  ENDPOINT_SCAN_BACKWARD,\n  ENDPOINT_SCAN_FORWARD,\n}\n","import {\n  ENDPOINT_DELETE_TEXT_COMMENT,\n  ENDPOINT_UPDATE_TEXT_COMMENT,\n  ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION,\n  ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS,\n} from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nexport const fetchDeleteTextComment = async (textCommentUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_DELETE_TEXT_COMMENT,\n    { textCommentUuid: textCommentUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchUpdateTextComment = async (textCommentUuid, text) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_UPDATE_TEXT_COMMENT,\n    { textCommentUuid: textCommentUuid, text: text },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchCreateTextCommentModification = async (textCommentUuid, style, anchorOffset, focusOffset) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION,\n    {\n      textCommentUuid: textCommentUuid,\n      style: style,\n      anchorOffset: anchorOffset,\n      focusOffset: focusOffset,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchListDeleteTextCommentModifications = async (textCommentUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS,\n    { textCommentUuid: textCommentUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\nexport const STYLE_UNDERLINE = 'underline';\nexport const STYLE_STRIKE_THROUGH = 'strike-through';\nexport const STYLE_HIGHLIGHT = 'highlight';\n","import { ENDPOINT_DELETE_VOICE_RECORDING } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchDeleteVoiceRecording = async (voiceRecordingUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_DELETE_VOICE_RECORDING,\n    { voiceRecordingUuid: voiceRecordingUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\nimport Popover from 'react-text-selection-popover';\nimport { RoughNotation } from \"react-rough-notation\";\nimport styles from './TextComment.module.css';\nimport {\n  fetchCreateTextCommentModification,\n  STYLE_UNDERLINE,\n  STYLE_STRIKE_THROUGH,\n  STYLE_HIGHLIGHT,\n} from './network';\n\n\nclass TextComment extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.selectableRef = React.createRef();\n\n    this.state = {\n      // UI\n      modifications: props.data.modifications,\n      selectableIsShowable: true,\n      // Form\n      anchorOffset: null,\n      focusOffset: null,\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleUnderline = this.handleUnderline.bind(this);\n    this.handleStrikethrough = this.handleStrikethrough.bind(this);\n    this.handleHighlight = this.handleHighlight.bind(this);\n    this.onTextSelect = this.onTextSelect.bind(this);\n    this.onTextUnselect = this.onTextUnselect.bind(this);\n    this.renderTextComment = this.renderTextComment.bind(this);\n  }\n\n  /*\n   * When the user deletes a text comment.\n   */\n  async handleDelete(event) {\n    event.preventDefault();\n    const textCommentUuid = this.props.data.uuid;\n    await this.props.destroy(textCommentUuid);\n  }\n\n  /*\n   * When the user underlines part of the comment.\n   */\n  async handleUnderline(event) {\n    event.preventDefault();\n    const textCommentUuid = this.props.data.uuid;\n    const responseJson = await fetchCreateTextCommentModification(\n      textCommentUuid,\n      STYLE_UNDERLINE,\n      this.state.anchorOffset,\n      this.state.focusOffset,\n    );\n    this.props.create(textCommentUuid, responseJson.data);\n    await this.setState({ selectableIsShowable: false });\n  }\n\n  /*\n   * When the user strike-throughs part of the comment.\n   */\n  async handleStrikethrough(event) {\n    event.preventDefault();\n    const textCommentUuid = this.props.data.uuid;\n    const responseJson = await fetchCreateTextCommentModification(\n      textCommentUuid,\n      STYLE_STRIKE_THROUGH,\n      this.state.anchorOffset,\n      this.state.focusOffset,\n    );\n    this.props.create(textCommentUuid, responseJson.data);\n    await this.setState({ selectableIsShowable: false });\n  }\n\n  /*\n   * When the user highlights part of the comment.\n   */\n  async handleHighlight(event) {\n    event.preventDefault();\n    const textCommentUuid = this.props.data.uuid;\n    const responseJson = await fetchCreateTextCommentModification(\n      textCommentUuid,\n      STYLE_HIGHLIGHT,\n      this.state.anchorOffset,\n      this.state.focusOffset,\n    );\n    this.props.create(textCommentUuid, responseJson.data);\n    await this.setState({ selectableIsShowable: false });\n  }\n\n  /*\n   * 🆗\n   */\n  async onTextSelect() {\n    const selection = window.getSelection();\n\n    // Invalid text selection\n    if(selection.anchorNode !== selection.focusNode) {\n      await this.setState({\n        selectableIsShowable: false,\n        anchorOffset: null,\n        focusOffset: null,\n      })\n      return;\n    }\n\n    // NOTE: anchor is where the user starts selecting text, focus is the end\n    //       of the selection.\n    const offset = parseInt(selection.anchorNode.parentNode.getAttribute('offset'));\n    await this.setState({\n      selectableIsShowable: true,\n      anchorOffset: offset + selection.anchorOffset,\n      focusOffset: offset + selection.focusOffset,\n    });\n  }\n\n  /*\n   * ❗️🆗\n   */\n  async onTextUnselect() {\n    await this.setState({\n      selectableIsShowable: false,\n      anchorOffset: null,\n      focusOffset: null,\n    });\n  }\n\n  /*\n   * Monkey patch Rough Notation so that the markup is displayed behind\n   * neighboring text.\n   */\n  updateZIndex(annotation) {\n    annotation._svg.style.zIndex = -1;\n  }\n\n  /*\n   * When rendering a text comment, the text has to be displayed along with all\n   * of its annotations. Here the comment string is spliced into many\n   * substrings. If a substring has an accompanying modification, then Rough\n   * Notation is used to display the underline, strike-through, or highlight.\n   */\n  renderTextComment() {\n    const textComment = this.props.data;\n    const textCommentText = textComment.text;\n    const modifications = textComment.modifications;\n\n    let startOffset = 0,\n        textCommentHtml = <></>;\n    for(let i = 0; i < modifications.length; i++) {\n        let modification = modifications[i];\n\n        const regSubString = textCommentText.substring(\n          startOffset,\n          modification.startPtr\n        )\n        const styledSubString = textCommentText.substring(\n          modification.startPtr,\n          modification.endPtr\n        )\n\n        textCommentHtml = (\n          <>\n            {textCommentHtml}\n            <span offset={startOffset}>{regSubString}</span>\n            <RoughNotation className={styles.Notated}\n                           show={true}\n                           multiline={true}\n                           color=\"red\"\n                           type={modification.type}\n                           animate={modification.animate}\n                           getAnnotationObject={this.updateZIndex}\n                           ref={modification.uuid}>\n              {styledSubString}\n            </RoughNotation>\n          </>\n        )\n\n        startOffset = modification.endPtr;\n    }\n\n    const regSubString = textCommentText.substring(\n      startOffset,\n      textCommentText.length\n    )\n\n    textCommentHtml = (\n      <>\n        {textCommentHtml}\n        <span offset={startOffset}>{regSubString}</span>\n      </>\n    )\n\n    return textCommentHtml;\n  }\n\n  /*\n   * 🎨\n   */\n  render() {\n    return (\n      <div className={styles.TextComment}>\n        <div>\n          <p ref={this.selectableRef}>\n            {this.renderTextComment()}\n          </p>\n          <Popover selectionRef={this.selectableRef} onTextSelect={this.onTextSelect} onTextUnselect={this.onTextUnselect} isOpen={this.state.selectableIsShowable}>\n            <form onSubmit={async (e) => { await this.handleUnderline(e); }}>\n              <button type=\"submit\">\n                U\n              </button>\n            </form>\n            <form onSubmit={async (e) => { await this.handleStrikethrough(e); }}>\n              <button type=\"submit\">\n                S\n              </button>\n            </form>\n            <form onSubmit={async (e) => { await this.handleHighlight(e); }}>\n              <button type=\"submit\">\n                H\n              </button>\n            </form>\n          </Popover>\n        </div>\n\n        <button type=\"button\" onClick={async (e) => { await this.props.destroyModifications(this.props.data.uuid); }}>\n          Clear modifications\n        </button>\n\n        <button type=\"button\" onClick={async (e) => { await this.props.destroy(this.props.data.uuid); }}>\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n}\n\nTextComment.propTypes = {};\n\nTextComment.defaultProps = {};\n\nexport default TextComment;\n","import React from 'react';\nimport styles from './VoiceRecording.module.css';\nimport { fetchDeleteVoiceRecording } from './network';\n\nclass VoiceRecording extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  /*\n   * When the user deletes a text comment.\n   */\n  async handleDelete(event) {\n    event.preventDefault();\n    const voiceRecordingUuid = this.props.data.uuid;\n    await fetchDeleteVoiceRecording(voiceRecordingUuid);\n    await this.props.destroy(voiceRecordingUuid);\n  }\n\n  /*\n   * 🎨\n   */\n  render() {\n    const voiceRecording = this.props.data;\n    return (\n      <div className={styles.VoiceRecording}>\n        <p><i>\n          {\n            voiceRecording.transcriptFinal === 'null' ?\n            '<transcript not available>' : voiceRecording.transcriptFinal\n          }\n        </i></p>\n        <form onSubmit={async (e) => { await this.handleDelete(e); }}>\n          <button type=\"submit\">\n            Delete\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nVoiceRecording.propTypes = {};\n\nVoiceRecording.defaultProps = {};\n\nexport default VoiceRecording;\n","import React from 'react';\nimport styles from './Chat.module.css';\nimport { fetchCreateTextComment, fetchTextComments, fetchVoiceRecordings } from './network'\nimport {\n  fetchDeleteTextComment,\n  fetchListDeleteTextCommentModifications,\n} from '../TextComment/network'\nimport {\n  fetchDeleteVoiceRecording,\n} from '../VoiceRecording/network'\nimport TextComment from '../TextComment/TextComment'\nimport VoiceRecording from '../VoiceRecording/VoiceRecording'\nimport {\n  CLASS_TEXT_COMMENT,\n  CLASS_VOICE_RECORDING\n} from '../../config/model'\n\n\nclass Chat extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      // Data\n      _textComments: undefined,\n      _voiceRecordings: undefined,\n      feed: [],\n      // Form\n      text: '',\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleChange = this.handleChange.bind(this);\n    this.buildFeed = this.buildFeed.bind(this);\n    this.destroyFeedItem = this.destroyFeedItem.bind(this);\n    this.destroyTextCommentModifications = this.destroyTextCommentModifications.bind(this);\n    this.destroyTextComment = this.destroyTextComment.bind(this);\n    this.destroyVoiceRecording = this.destroyVoiceRecording.bind(this);\n    this.createTextComment = this.createTextComment.bind(this);\n    this.createTextCommentModification = this.createTextCommentModification.bind(this);\n  }\n\n  /*\n   * Load comments and voice recordings\n   */\n  async componentDidMount() {\n    const textCommentsResponse = await fetchTextComments();\n    if(textCommentsResponse.system.status !== 200) {\n      this.errorMessage = textCommentsResponse.system.message;\n    } else {\n      this.setState({ _textComments: textCommentsResponse.data });\n    }\n\n    const voiceRecordingsResponse = await fetchVoiceRecordings();\n    if(voiceRecordingsResponse.system.status !== 200) {\n      this.errorMessage = voiceRecordingsResponse.system.message;\n    } else {\n      this.setState({ _voiceRecordings: voiceRecordingsResponse.data });\n    }\n\n    this.buildFeed();\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  /*\n   * This aggregates text comments and voice recordings into one data list,\n   * sorted by track timestamp.\n   */\n  buildFeed() {\n    const textComments = this.state._textComments,\n          voiceRecordings = this.state._voiceRecordings;\n\n    if(!Array.isArray(textComments) || !Array.isArray(voiceRecordings)) {\n      this.setState({ feed: [] });\n      return;\n    }\n\n    const feedData = [...textComments, ...voiceRecordings];\n    const feed = feedData.sort((a, b) => {\n      return a.timestampMilliseconds - b.timestampMilliseconds;\n    });\n\n    this.setState({ feed: feed });\n  }\n\n  /*\n   * Called inside a child component, this deletes the data (either a text\n   * comment or voice recording) from the state, thereby updating the UI.\n   */\n  async destroyFeedItem(uuid) {\n    const textComments = this.state._textComments,\n          voiceRecordings = this.state._voiceRecordings;\n\n    const filteredTextComments = textComments.filter(i => i.uuid !== uuid),\n          filteredVoiceRecordings = voiceRecordings.filter(i => i.uuid !== uuid);\n\n    await this.setState({ _textComments: filteredTextComments });\n    await this.setState({ _voiceRecordings: filteredVoiceRecordings });\n\n    this.buildFeed();\n  }\n\n  /*\n   * ...\n   */\n  async destroyTextCommentModifications(textCommentUuid) {\n    await fetchListDeleteTextCommentModifications(textCommentUuid);\n\n    const textComments = this.state._textComments;\n    const textCommentIndex = textComments.findIndex(t => t.uuid === textCommentUuid)\n\n    textComments[textCommentIndex].modifications = [];\n\n    await this.setState({ _textComments: textComments });\n  }\n\n  /*\n   * ...\n   */\n  async destroyTextComment(textCommentUuid) {\n    await fetchListDeleteTextCommentModifications(textCommentUuid);\n    await fetchDeleteTextComment(textCommentUuid);\n    await this.destroyFeedItem(textCommentUuid);\n  }\n\n  /*\n   * ...\n   */\n  async destroyVoiceRecording(voiceRecordingUuid) {\n    await fetchDeleteVoiceRecording(voiceRecordingUuid);\n    await this.destroyFeedItem(voiceRecordingUuid);\n  }\n\n  /*\n   * When a user submits a new comment.\n   */\n  async createTextComment(event) {\n    event.preventDefault();\n    const responseJson = await fetchCreateTextComment(this.state.text);\n\n    let textCommentsCopy = [...this.state._textComments];\n    textCommentsCopy.push(responseJson.data);\n\n    await this.setState({\n      _textComments: textCommentsCopy,\n      text: '',\n    });\n\n    this.buildFeed();\n  }\n\n  /*\n   * Called by a child component when the user creates a text comment\n   * modification.\n   */\n  async createTextCommentModification(textCommentUuid, textCommentModification) {\n    let textCommentsCopy = [...this.state._textComments];\n\n    const textCommentIndex = textCommentsCopy.findIndex(t => t.uuid === textCommentUuid)\n    let modificationsCopy = [...textCommentsCopy[textCommentIndex].modifications];\n\n    modificationsCopy.push(textCommentModification);\n\n    const sortedModifications = modificationsCopy.sort((a, b) => {\n      return a.startPtr - b.startPtr;\n    });\n\n    textCommentsCopy[textCommentIndex].modifications = sortedModifications;\n\n    await this.setState({ _textComments: textCommentsCopy });\n\n    this.buildFeed();\n  }\n\n  /*\n   * 🎨\n   */\n  render() {\n    return (\n      <div>\n        <div className={styles.Chat}>\n          {this.state.feed.map((value, index) => {\n            if(value.class === CLASS_TEXT_COMMENT) {\n              return <TextComment key={index} data={value} destroy={this.destroyTextComment} destroyModifications={this.destroyTextCommentModifications} create={this.createTextCommentModification} />\n            } else if(value.class === CLASS_VOICE_RECORDING) {\n              return <VoiceRecording key={index} data={value} destroy={this.destroyVoiceRecording} />\n            } else {\n              return null;\n            }\n          })}\n        </div>\n        <form className={styles.CreateTextComment} onSubmit={async (e) => { await this.createTextComment(e); }}>\n\n          <input type=\"text\"\n                 name=\"text\"\n                 placeholder=\"text\"\n                 value={this.state.text}\n                 onChange={this.handleChange} />\n\n          <button type=\"submit\">\n            Send\n          </button>\n\n        </form>\n      </div>\n    );\n  }\n\n}\n\nChat.propTypes = {};\n\nChat.defaultProps = {};\n\nexport default Chat;\n","const CLASS_TEXT_COMMENT = 'TextComment'\nconst CLASS_VOICE_RECORDING = 'VoiceRecording'\n\nexport { CLASS_TEXT_COMMENT, CLASS_VOICE_RECORDING }\n","import { ENDPOINT_OBTAIN_AUTH_TOKEN } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchAuthToken = async (username, password) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_OBTAIN_AUTH_TOKEN,\n    { username: username, password: password },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styles from './Login.module.css';\n\nimport { fetchAuthToken } from './network';\n\n\nclass Login extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      // Form\n      username: '',\n      password: '',\n      rememberMe: false,\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  async handleSubmit(event) {\n    event.preventDefault();\n    const responseJson = await fetchAuthToken(this.state.username, this.state.password);\n    if(!responseJson.access || !responseJson.refresh) {\n      return;\n    }\n    localStorage.setItem('accessToken', responseJson.access);\n    localStorage.setItem('refreshToken', responseJson.refresh);\n  }\n\n  render() {\n    return (\n      <form className={styles.Login} onSubmit={async (e) => { await this.handleSubmit(e); }}>\n        <h3>Sign in</h3>\n        <p>If you have not created an account yet, then please <Link to=\"/signup\">Sign Up</Link> first.</p>\n\n        <label className={styles.FormBlock}>\n          Username\n          <input type=\"text\"\n                 name=\"username\"\n                 placeholder=\"username\"\n                 value={this.state.username}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Password\n          <input type=\"password\"\n                 name=\"password\"\n                 placeholder=\"password\"\n                 value={this.state.password}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          <input type=\"checkbox\"\n                 name=\"remember-me\"\n                 value={this.state.rememberMe}\n                 onChange={this.handleChange} />\n          Remember Me\n        </label>\n\n        <div className={styles.FormBlock}>\n          <button type=\"submit\">\n            Sign In\n          </button>\n          <span><Link to=\"/forgotpassword\">Forgot Password?</Link></span>\n        </div>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {};\n\nLogin.defaultProps = {};\n\nexport default Login;\n","import { ENDPOINT_LIST_QUEUES, ENDPOINT_DELETE_QUEUE } from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches...\n */\nexport const fetchListQueues = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_LIST_QUEUES,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nexport const fetchDeleteQueue = async (queueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_DELETE_QUEUE,\n    { queueUuid: queueUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\nimport styles from './QueueItem.module.css';\n\n\nclass QueueItem extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      reveal: false,\n    }\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleDelete = this.handleDelete.bind(this);\n    this.toggleReveal = this.toggleReveal.bind(this);\n  }\n\n  /*\n   * When the user deletes a text comment.\n   */\n  async handleDelete(event) {\n    event.preventDefault();\n    const queueUuid = this.props.data.uuid;\n    await this.props.destroy(queueUuid);\n  }\n\n  /*\n   * When...\n   */\n  toggleReveal(event) {\n    this.setState({ reveal: !this.state.reveal });\n  }\n\n  /*\n   * 🎨\n   */\n  render() {\n    const queue = this.props.data;\n    const indent = '-'.repeat(queue.depth) + ' ';\n    return (\n      <div className={styles.QueueItem}>\n        <span>\n          {indent}\n          {!queue.isDeleted && (queue.trackName || queue.collectionName)}\n        </span>\n        {!queue.isDeleted && queue.depth === 0 &&\n          <button type=\"button\" onClick={async (e) => { await this.props.destroy(this.props.data.uuid); }}>\n            Delete\n          </button>\n        }\n        {!queue.isDeleted && queue.depth === 1 &&\n          <button type=\"button\" onClick={async (e) => { await this.props.destroyChild(this.props.parentQueueUuid, this.props.data.uuid); }}>\n            Delete\n          </button>\n        }\n        {queue.children.length > 0 && !this.state.reveal &&\n          <button type=\"button\" onClick={this.toggleReveal}>\n            More\n          </button>\n        }\n        {queue.children.length > 0 && this.state.reveal &&\n          <>\n            <button type=\"button\" onClick={this.toggleReveal}>\n              Less\n            </button>\n            <div>\n              {queue.children.map((value, index) => (\n                <QueueItem key={index} data={value} destroy={this.props.destroy} destroyChild={this.props.destroyChild} parentQueueUuid={queue.uuid}></QueueItem>\n              ))}\n            </div>\n          </>\n        }\n      </div>\n    );\n  }\n\n}\n\nQueueItem.propTypes = {};\n\nQueueItem.defaultProps = {};\n\nexport default QueueItem;\n","import React from 'react';\nimport styles from './Queue.module.css';\nimport { fetchListQueues, fetchDeleteQueue } from './network'\nimport QueueItem from '../QueueItem/QueueItem'\n\n\nclass Queue extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      // Data\n      queues: [],\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.destroyQueueItem = this.destroyQueueItem.bind(this);\n    this.destroyChildQueueItem = this.destroyChildQueueItem.bind(this);\n  }\n\n  /*\n   * Load queues.\n   */\n  async componentDidMount() {\n    const jsonResponse = await fetchListQueues();\n    if(jsonResponse.system.status !== 200) {\n      this.errorMessage = jsonResponse.system.message;\n    } else {\n      const queues = jsonResponse.data;\n      this.setState({ queues: queues });\n      if(!queues.length) {\n        localStorage.setItem('lastQueueUuid', '');\n        return;\n      }\n      const lastQueueUuid = queues[queues.length - 1].uuid;\n      localStorage.setItem('lastQueueUuid', lastQueueUuid);\n    }\n  }\n\n  /*\n   * Called inside a child component, this first deletes the queue from the\n   * backend, then, on success, it deletes it from the front-end model and\n   * view.\n   */\n  async destroyQueueItem(queueUuid) {\n    await fetchDeleteQueue(queueUuid);\n    const queues = this.state.queues;\n    const filteredQueues = queues.filter(i => i.uuid !== queueUuid);\n    await this.setState({ queues: filteredQueues });\n  }\n\n  async destroyChildQueueItem(parentQueueUuid, childQueueUuid) {\n    await fetchDeleteQueue(childQueueUuid);\n\n    const queuesCopy = [...this.state.queues];\n    const parentIndex = queuesCopy.findIndex(i => i.uuid === parentQueueUuid);\n\n    const children = queuesCopy[parentIndex].children;\n    const filteredChildren = children.filter(i => i.uuid !== childQueueUuid);\n    queuesCopy[parentIndex].children = filteredChildren;\n\n    await this.setState({ queues: queuesCopy });\n  }\n\n  /*\n   * 🎨\n   */\n  render() {\n    return (\n      <div className={styles.Queue}>\n        <div>\n          {this.state.queues.map((value, index) => (\n            <QueueItem key={index} data={value} destroy={this.destroyQueueItem} destroyChild={this.destroyChildQueueItem}></QueueItem>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nQueue.propTypes = {};\n\nQueue.defaultProps = {};\n\nexport default Queue;\n","import { ENDPOINT_SEARCH_MUSIC, ENDPOINT_CREATE_QUEUE } from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchSearchMusicLibrary = async (query, providerSpotify, providerYouTube, providerJukeboxRadio, formatTrack, formatAlbum, formatPlaylist, formatVideo) => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_SEARCH_MUSIC,\n    {\n      query,\n      providerSpotify,\n      providerYouTube,\n      providerJukeboxRadio,\n      formatTrack,\n      formatAlbum,\n      formatPlaylist,\n      formatVideo,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchCreateQueue = async (className, genericUuid, prevQueueUuid, nextQueueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_QUEUE,\n    { className, genericUuid, prevQueueUuid, nextQueueUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\n\n\nclass SearchResult extends React.Component {\n\n  render() {\n    const searchResult = this.props.data;\n    return (\n      <div>\n        <span>\n          {searchResult.provider} {searchResult.format} {searchResult.name}\n        </span>\n        <button type=\"button\" onClick={async (e) => { await this.props.addToQueue(this.props.data.class, this.props.data.uuid); }}>\n          Add\n        </button>\n      </div>\n    );\n  }\n}\n\nSearchResult.propTypes = {};\n\nSearchResult.defaultProps = {};\n\nexport default SearchResult;\n","import React from 'react';\nimport styles from './Search.module.css';\n\nimport { fetchSearchMusicLibrary, fetchCreateQueue } from './network';\nimport SearchResult from '../SearchResult/SearchResult'\n\n\nclass Search extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      searchResults: [],\n      // Form\n      query: '',\n      provider: {\n        spotify: true,\n        youTube: true,\n        jukeboxRadio: true,\n      },\n      format: {\n        track: true,\n        album: true,\n        playlist: true,\n        video: true,\n      },\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addToQueue = this.addToQueue.bind(this);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleCheckboxChange(event) {\n    const [key0, key1] = event.target.name.split('.'),\n          val = event.target.checked;\n\n    let obj = {};\n    obj[key0] = { ...this.state[key0]}\n    obj[key0][key1] = val;\n    this.setState(obj);\n  }\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  async handleSubmit(event) {\n    event.preventDefault();\n    const responseJson = await fetchSearchMusicLibrary(\n      this.state.query,\n      this.state.provider.spotify,\n      this.state.provider.youTube,\n      this.state.provider.jukeboxRadio,\n      this.state.format.track,\n      this.state.format.album,\n      this.state.format.playlist,\n      this.state.format.video,\n    );\n    this.setState({ searchResults: responseJson.data });\n  }\n\n  /*\n   * When...\n   */\n  async addToQueue(className, genericUuid) {\n    const prevQueueUuid = localStorage.getItem('lastQueueUuid') || null;\n    const nextQueueUuid = null;\n    await fetchCreateQueue(\n      className,\n      genericUuid,\n      prevQueueUuid,\n      nextQueueUuid\n    );\n    this.setState({ searchResults: [] });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className={styles.Login} onSubmit={async (e) => { await this.handleSubmit(e); }}>\n          <h3>Search</h3>\n\n          <label className={styles.FormBlock}>\n            Query\n            <input type=\"text\"\n                   name=\"query\"\n                   placeholder=\"Search by name or artist\"\n                   value={this.state.query}\n                   onChange={this.handleChange} />\n          </label>\n\n          <div className={styles.FormBlock}>\n            <label>\n              <input type=\"checkbox\"\n                     name=\"provider.spotify\"\n                     checked={this.state.provider.spotify}\n                     onChange={this.handleCheckboxChange} />\n              Spotify\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"provider.youTube\"\n                     checked={this.state.provider.youTube}\n                     onChange={this.handleCheckboxChange} />\n              YouTube\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"provider.jukeboxRadio\"\n                     checked={this.state.provider.jukeboxRadio}\n                     onChange={this.handleCheckboxChange} />\n              Jukebox Radio\n            </label>\n          </div>\n\n          <div className={styles.FormBlock}>\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.track\"\n                     checked={this.state.format.track}\n                     onChange={this.handleCheckboxChange} />\n              Track\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.album\"\n                     checked={this.state.format.album}\n                     onChange={this.handleCheckboxChange} />\n              Album\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.playlist\"\n                     checked={this.state.format.playlist}\n                     onChange={this.handleCheckboxChange} />\n              Playlist\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.video\"\n                     checked={this.state.format.video}\n                     onChange={this.handleCheckboxChange} />\n              Video\n            </label>\n          </div>\n\n          <div className={styles.FormBlock}>\n            <button type=\"submit\">\n              Search\n            </button>\n          </div>\n        </form>\n        <div>\n          {this.state.searchResults.map((value, index) => (\n            <SearchResult key={index} data={value} addToQueue={this.addToQueue}></SearchResult>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {};\n\nSearch.defaultProps = {};\n\nexport default Search;\n","import { ENDPOINT_CREATE_TRACK } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches...\n */\nexport const fetchCreateTrack = async (audioFile, imageFile, trackName, artistName, albumName) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_TRACK,\n    {\n      audioFile: audioFile,\n      imageFile: imageFile,\n      trackName: trackName,\n      artistName: artistName,\n      albumName: albumName,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\nimport styles from './Upload.module.css';\n\nimport { fetchCreateTrack } from './network';\n\n\nclass Upload extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      // Form\n      audioFile: '',\n      imageFile: '',\n      trackName: '',\n      artistName: '',\n      albumName: '',\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleFileChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.files[0];\n    this.setState(obj);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  async handleSubmit(event) {\n    event.preventDefault();\n    await fetchCreateTrack(\n      this.state.audioFile,\n      this.state.imageFile,\n      this.state.trackName,\n      this.state.artistName,\n      this.state.albumName,\n    );\n    this.setState({\n      trackName: '',\n      artistName: '',\n      albumName: '',\n    });\n  }\n\n  render() {\n    return (\n      <form className={styles.Login} onSubmit={async (e) => { await this.handleSubmit(e); }}>\n        <h3>Upload</h3>\n\n        <label className={styles.FormBlock}>\n          Audio file\n          <input type=\"file\"\n                 name=\"audioFile\"\n                 onChange={this.handleFileChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Image file\n          <input type=\"file\"\n                 name=\"imageFile\"\n                 onChange={this.handleFileChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Track name\n          <input type=\"text\"\n                 name=\"trackName\"\n                 placeholder=\"Track name\"\n                 value={this.state.trackName}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Artist name\n          <input type=\"text\"\n                 name=\"artistName\"\n                 placeholder=\"Artist name\"\n                 value={this.state.artistName}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Album name\n          <input type=\"text\"\n                 name=\"albumName\"\n                 placeholder=\"Album name\"\n                 value={this.state.albumName}\n                 onChange={this.handleChange} />\n        </label>\n\n        <div className={styles.FormBlock}>\n          <button type=\"submit\">\n            Upload\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nUpload.propTypes = {};\n\nUpload.defaultProps = {};\n\nexport default Upload;\n","import {\n  ENDPOINT_GET_STREAM,\n  ENDPOINT_NEXT_TRACK,\n  ENDPOINT_PAUSE_TRACK,\n  ENDPOINT_PLAY_TRACK,\n  ENDPOINT_PREVIOUS_TRACK,\n  ENDPOINT_SCAN_BACKWARD,\n  ENDPOINT_SCAN_FORWARD,\n} from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nconst fetchStream = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_GET_STREAM,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchNextTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_NEXT_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPauseTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_PAUSE_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPlayTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_PLAY_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPreviousTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_PREVIOUS_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchScanBackward = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_SCAN_BACKWARD,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchScanForward = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_SCAN_FORWARD,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\nexport {\n  fetchStream,\n  fetchNextTrack,\n  fetchPauseTrack,\n  fetchPlayTrack,\n  fetchPreviousTrack,\n  fetchScanBackward,\n  fetchScanForward,\n}\n","import React from 'react';\nimport {\n  fetchStream,\n  fetchNextTrack,\n  fetchPauseTrack,\n  fetchPlayTrack,\n  fetchPreviousTrack,\n  fetchScanBackward,\n  fetchScanForward,\n} from './network'\n\n\nclass Player extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      progress: undefined,\n      _nextTrackScheduledAt: undefined,\n      // Data\n      stream: undefined,\n    };\n\n    //\n    this.getStream = this.getStream.bind(this);\n    this.animateProgressBar = this.animateProgressBar.bind(this);\n    this.scheduleNextTrack = this.scheduleNextTrack.bind(this);\n    this.handlePrevTrack = this.handlePrevTrack.bind(this);\n    this.handleNextTrack = this.handleNextTrack.bind(this);\n    this.handlePlayTrack = this.handlePlayTrack.bind(this);\n    this.handlePauseTrack = this.handlePauseTrack.bind(this);\n    this.handleScanBackward = this.handleScanBackward.bind(this);\n    this.handleScanForward = this.handleScanForward.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStream();\n    this.scheduleNextTrack();\n  }\n\n  async getStream() {\n    const jsonResponse = await fetchStream();\n    const stream = jsonResponse.data;\n    await this.setState({ stream: stream });\n    this.animateProgressBar();\n  }\n\n  animateProgressBar() {\n    const loop = () => {\n      const stream = this.state.stream;\n      if(!stream?.nowPlaying) {\n        this.setState({ progress: undefined, stream: undefined});\n        return;\n      } else if(!stream.isPlaying && stream.isPaused) {\n        this.setState({\n          progress: (stream.pausedAt * 1000) - (stream.playedAt * 1000),\n        });\n        return;\n      }\n\n      const date = new Date();\n      const epochNow = date.getTime();\n      const progress = epochNow - (stream.playedAt * 1000);\n\n      if(progress > (stream.nowPlaying.durationMilliseconds + 3000)) {\n        this.setState({ progress: undefined, stream: undefined});\n        return;\n      }\n\n      this.setState({\n        progress: progress,\n      });\n      window.requestAnimationFrame(loop);\n    };\n\n    loop();\n  }\n\n  scheduleNextTrack() {\n    let nextTrackScheduledAt = this.state._nextTrackScheduledAt;\n    if(nextTrackScheduledAt) {\n      clearTimeout(nextTrackScheduledAt);\n    }\n\n    const stream = this.state.stream;\n    if(!stream?.isPlaying) {\n      this.setState({ _nextTrackScheduledAt: undefined });\n      return;\n    }\n\n    const date = new Date();\n    const epochNow = date.getTime();\n    const progress = epochNow - (stream.playedAt * 1000);\n    const durationMilliseconds = stream.nowPlaying.durationMilliseconds;\n\n    nextTrackScheduledAt = setTimeout(\n      this.handleNextTrack,\n      (durationMilliseconds - progress)\n    );\n    console.log(nextTrackScheduledAt)\n    this.setState({ _nextTrackScheduledAt: nextTrackScheduledAt });\n  }\n\n  /*\n   * When...\n   */\n  async handlePrevTrack(event) {\n    event.preventDefault();\n\n    await fetchPreviousTrack();\n\n    await this.getStream();\n    this.scheduleNextTrack();\n  }\n\n  /*\n   * When...\n   */\n  async handleNextTrack(event) {\n    if(event) {\n      event.preventDefault();\n    }\n\n    await fetchNextTrack();\n\n    await this.getStream();\n    this.scheduleNextTrack();\n  }\n\n  /*\n   * When...\n   */\n  async handlePlayTrack(event) {\n    event.preventDefault();\n\n    const stream = this.state.stream;\n    const jsonResponse = await fetchPlayTrack();\n    await this.setState({\n      stream: {\n        ...stream,\n        isPlaying: true,\n        isPaused: false,\n        playedAt: jsonResponse.data.playedAt,\n      }\n    });\n\n    this.animateProgressBar();\n    this.scheduleNextTrack();\n  }\n\n  /*\n   * When...\n   */\n  async handlePauseTrack(event) {\n    event.preventDefault();\n\n    const stream = this.state.stream;\n    const jsonResponse = await fetchPauseTrack();\n    await this.setState({\n      stream: {\n        ...stream,\n        isPlaying: false,\n        isPaused: true,\n        pausedAt: jsonResponse.data.pausedAt,\n      }\n    });\n    this.scheduleNextTrack();\n  }\n\n  /*\n   * When...\n   */\n  async handleScanBackward(event) {\n    event.preventDefault();\n\n    const stream = this.state.stream;\n    await fetchScanBackward();\n\n    const date = new Date();\n    const epochNow = date.getTime();\n\n    const proposedPlayedAt = stream.playedAt + 10 ;\n    const proposedProgress = epochNow - (proposedPlayedAt * 1000);\n    const playedAt = proposedProgress > 0 ? proposedPlayedAt : Math.floor(epochNow / 1000);\n\n    await this.setState( {stream: { ...stream, playedAt: playedAt } });\n    this.scheduleNextTrack();\n  }\n\n  /*\n   * When...\n   */\n  async handleScanForward(event) {\n    event.preventDefault();\n\n    const responseJson = await fetchScanForward();\n    if(responseJson.system.status !== 200) {\n      throw responseJson.system.message;\n    }\n\n    const stream = this.state.stream;\n    await this.setState( {stream: { ...stream, playedAt: stream.playedAt - (10) } });\n    this.scheduleNextTrack();\n  }\n\n  render() {\n    const stream = this.state.stream;\n    return (\n      <>\n        <div>\n          {(stream?.isPlaying || stream?.isPaused) &&\n            <p>{stream?.nowPlaying?.name}</p>\n          }\n          <progress value={this.state.progress} max={stream?.nowPlaying?.durationMilliseconds}></progress>\n        </div>\n        <div>\n          <button onClick={this.handlePrevTrack}>Prev</button>\n          {stream?.isPaused &&\n            <button onClick={this.handlePlayTrack}>Play</button>\n          }\n          {stream?.isPlaying &&\n            <button onClick={this.handlePauseTrack}>Pause</button>\n          }\n          <button onClick={this.handleNextTrack}>Next</button>\n        </div>\n        <div>\n          {(stream?.isPlaying) &&\n            <button onClick={this.handleScanBackward}>Backward</button>\n          }\n          {(stream?.isPlaying) &&\n            <button onClick={this.handleScanForward}>Forward</button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nPlayer.propTypes = {};\n\nPlayer.defaultProps = {};\n\nexport default Player;\n","import './App.css';\nimport Chat from './components/Chat/Chat'\nimport Login from './components/Login/Login'\nimport Queue from './components/Queue/Queue'\nimport Search from './components/Search/Search'\nimport Upload from './components/Upload/Upload'\nimport Player from './components/Player/Player'\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n\n        {/* nav bar */}\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            <li>\n              <Link to=\"/player\">Player</Link>\n            </li>\n            <li>\n              <Link to=\"/queue\">Queue</Link>\n            </li>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n            <li>\n              <Link to=\"/upload\">Upload</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* main section */}\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/chat\">\n            <Chat />\n          </Route>\n          <Route path=\"/player\">\n            <Player />\n          </Route>\n          <Route path=\"/queue\">\n            <Queue />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}