{"version":3,"sources":["components/Player/Player.module.css","components/Upload/Upload.module.css","components/QueueCollection/QueueCollection.module.css","components/Login/Login.module.css","components/Search/Search.module.css","components/QueueTrack/QueueTrack.module.css","components/Chat/Chat.module.css","components/TextComment/TextComment.module.css","components/VoiceRecording/VoiceRecording.module.css","components/Queue/Queue.module.css","config/global.js","utils/network.js","components/Chat/network.js","config/api.js","components/TextComment/network.js","components/VoiceRecording/network.js","components/TextComment/TextComment.js","components/VoiceRecording/VoiceRecording.js","components/Chat/Chat.js","config/model.js","components/Login/network.js","components/Login/Login.js","components/Queue/network.js","utils/reducers/marker.js","utils/reducers/queueInterval.js","utils/redux.js","components/TrackMarker/network.js","components/QueueInterval/network.js","components/TrackMarker/TrackMarker.js","components/QueueInterval/QueueInterval.js","components/QueueEdit/QueueEdit.js","components/QueueTrack/QueueTrack.js","components/QueueCollection/QueueCollection.js","components/Queue/Queue.js","components/Search/network.js","components/SearchResult/SearchResult.js","components/Search/Search.js","components/Upload/network.js","components/Upload/Upload.js","components/Player/network.js","components/Player/Player.js","components/UserSettings/UserSettings.js","components/UserSettings/network.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BACKEND_DOMAIN","process","TYPE_GET","TYPE_POST","fetchBackend","a","method","url","data","formData","FormData","Object","entries","key","value","append","requestOptions","headers","token","localStorage","getItem","Authorization","request","Request","fetch","mode","body","response","searchParams","URLSearchParams","set","getUrl","toString","fetchCreateTextComment","text","json","responseJson","fetchTextComments","fetchVoiceRecordings","fetchDeleteTextComment","textCommentUuid","fetchCreateVoiceRecording","audioFile","transcriptData","transcriptFinal","fetchDeleteVoiceRecording","voiceRecordingUuid","TextComment","props","className","styles","type","onClick","e","destroy","uuid","VoiceRecording","handleDelete","preventDefault","voiceRecording","onSubmit","connect","state","stream","textComments","voiceRecordings","feed","useState","setText","isRecording","setIsRecording","MicRecorder","bitRate","recorder","destroyTextCommentModifications","destroyTextComment","dispatch","destroyVoiceRecording","createTextComment","textComment","createTextCommentModification","useSpeechRecognition","transcript","resetTranscript","Chat","map","index","class","destroyModifications","create","CreateTextComment","SpeechRecognition","browserSupportsSpeechRecognition","stopListening","stop","getMp3","then","buffer","blob","file","File","lastModified","Date","now","JSON","stringify","startListening","continuous","start","name","placeholder","onChange","target","fetchAuthToken","username","password","fetchInitializeStream","fetchVerifyToken","status","undefined","Login","setUsername","setPassword","rememberMe","setRememberMe","handleSubmit","access","refresh","setItem","window","location","reload","to","FormBlock","fetchListQueues","fetchDeleteQueue","queueUuid","markerCreate","action","trackMarkerMap","marker","sortedMarkers","sort","b","timestampMilliseconds","markerDelete","filteredMarkers","filter","m","markerList","markers","findByUuid","o","sortQueueIntervals","upperBound","queueIntervalCreate","parentIndex","queueInterval","parentQueueUuid","queues","nextUpQueues","findIndex","children","trackQueue","console","log","sortedQueueIntervals","intervals","queueIntervalDelete","filteredQueueIntervals","initialState","lastUpQueues","_lastPlayed","playback","nowPlaying","userSettings","queueIntervalMap","streamSet","obj","isPlaying","isPaused","lastUp","streamPrevTrack","length","startedAt","streamNextTrack","streamExpire","playbackPlay","queueListSet","push","nextUp","queueDeleteNode","filteredQueues","i","queueDeleteChildNode","parentUuid","filteredChildren","textCommentListSet","textCommentCreate","textCommentDelete","voiceRecordingCreate","voiceRecordingListSet","voiceRecordingDelete","userGetSettings","store","createStore","payload","fetchStreamMarkerCreate","trackUuid","redux","fetchStreamMarkerDelete","markerUuid","fetchStreamMarkerList","fetchStreamQueueIntervalCreate","lowerBoundMarkerUuid","upperBoundMarkerUuid","isMuted","repeatCount","fetchStreamQueueIntervalDelete","queueIntervalUuid","TrackMarker","trackMarker","deleteTrackMarker","QueueInterval","deleteQueueInterval","lowerBound","queue","formMarkerTimestamp","setFormMarkerTimestamp","setLowerBoundMarkerUuid","setUpperBoundMarkerUuid","useEffect","track","loadData","createTrackMarker","createQueueInterval","showEditing","setShowEditing","edit","save","currentIndex","isNextUp","indent","QueueTrack","Button","isCurrentlyPlayingCollection","reveal","setReveal","toggleReveal","QueueCollection","Item","collection","Children","destroyQueueItem","Queue","fetchSearchMusicLibrary","query","providerSpotify","providerYouTube","providerJukeboxRadio","formatTrack","formatAlbum","formatPlaylist","formatVideo","fetchCreateQueue","genericUuid","SearchResult","searchResult","provider","format","addToQueue","Search","searchResults","setSearchResults","setQuery","serviceSpotify","setServiceSpotify","serviceYouTube","setServiceYouTube","serviceJukeboxRadio","setServiceJukeboxRadio","setFormatTrack","setFormatAlbum","setFormatPlaylist","setFormatVideo","checked","fetchCreateTrack","imageFile","trackName","artistName","albumName","Upload","setAudioFile","setImageFile","setTrackName","setArtistName","setAlbumName","files","fetchStream","fetchNextTrack","fetchPauseTrack","fetchPlayTrack","fetchPreviousTrack","fetchScanBackward","fetchScanForward","setKey","updateFeed","textCommentsJsonResponse","voiceRecordingsJsonResponse","handlePrevTrack","jsonResponse","handleNextTrack","handlePlayTrack","playedAt","handlePauseTrack","pausedAt","handleScanBackward","date","epochNow","getTime","proposedStartedAt","handleScanForward","system","Div","href","spotify","authorizationUrl","fetchGetUserSettings","App","setStatus","authResponse","streamJsonResponse","queueJsonResponse","userSettingsJsonResponse","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54547c3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Player\":\"Player_Player__RgpZ6\",\"Div\":\"Player_Div__HhfjS\",\"Button\":\"Player_Button__1m74t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Upload\":\"Upload_Upload__tMDig\",\"FormBlock\":\"Upload_FormBlock__2ls6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueueCollection\":\"QueueCollection_QueueCollection__3PH8C\",\"Item\":\"QueueCollection_Item__3Kg1p\",\"Button\":\"QueueCollection_Button__1j08c\",\"Children\":\"QueueCollection_Children__U1cJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1ujut\",\"FormBlock\":\"Login_FormBlock__S_rix\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"FormBlock\":\"Search_FormBlock__3ZZZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueueTrack\":\"QueueTrack_QueueTrack__14e2x\",\"Button\":\"QueueTrack_Button__cfD-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__3NjUX\",\"ChatItem\":\"Chat_ChatItem__9P8wv\",\"ChatBar\":\"Chat_ChatBar__1jd0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextComment\":\"TextComment_TextComment__15QHu\",\"Notated\":\"TextComment_Notated__24bZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VoiceRecording\":\"VoiceRecording_VoiceRecording__10J4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Queue\":\"Queue_Queue__YTCBa\"};","const BACKEND_DOMAIN = process.env.REACT_APP_BACKEND_DOMAIN;\nconst TYPE_GET = 'GET';\nconst TYPE_POST = 'POST';\n\nexport { BACKEND_DOMAIN, TYPE_GET, TYPE_POST }\n","import { BACKEND_DOMAIN } from '../config/global'\n\n\nasync function fetchBackend(method = '', url = '', data = {}) {\n  let response;\n\n  url = BACKEND_DOMAIN + url;\n\n  if(method !== 'GET') {\n\n    // aggregate form data in one place\n    const formData = new FormData();\n    for (const [key, value] of Object.entries(data)) {\n      formData.append(key, value);\n    }\n    // for (const [key, value] of Object.entries(files)) {\n    //   formData.append(key, value);\n    // }\n\n    // authenticate request if possible\n    let requestOptions = {headers: {}}\n    const token = localStorage.getItem('accessToken');\n    if(token) {\n      requestOptions.headers.Authorization = `Bearer ${token}`;\n    }\n    const request = new Request(url, requestOptions);\n\n    // make the request\n    response = await fetch(request, {\n      method: method,\n      mode: 'cors',\n      body: formData,\n    });\n  } else {\n\n    // translate form data for GET\n    let searchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(data)) {\n      searchParams.set(key, value);\n    }\n    const getUrl = url + '/?' + searchParams.toString();\n\n    // authenticate request if possible\n    let requestOptions = {headers: {'Content-Type': 'application/json'}}\n    const token = localStorage.getItem('accessToken');\n    if(token) {\n      requestOptions.headers.Authorization = `Bearer ${token}`;\n    }\n    const request = new Request(getUrl, requestOptions);\n\n    // make the request\n    response = await fetch(request, {\n      method: method,\n      mode: 'cors',\n    });\n  }\n\n  return response;\n}\n\nexport { fetchBackend }\n","import {\n  ENDPOINT_TEXT_COMMENT_CREATE,\n  ENDPOINT_TEXT_COMMENT_LIST,\n  ENDPOINT_VOICE_RECORDING_LIST\n} from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nconst fetchCreateTextComment = async (text) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_TEXT_COMMENT_CREATE,\n    {text: text},\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchTextComments = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_TEXT_COMMENT_LIST\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchVoiceRecordings = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_VOICE_RECORDING_LIST\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\nexport { fetchCreateTextComment, fetchTextComments, fetchVoiceRecordings }\n","// AUTHENTICATION\nexport const ENDPOINT_OBTAIN_TOKENS = '/auth/obtain-tokens/'\nexport const ENDPOINT_REFRESH_TOKEN = '/auth/refresh-token/'\nexport const ENDPOINT_VERIFY_TOKEN = '/auth/verify-token/'\n\n// USER\nexport const ENDPOINT_USER_GET_SETTINGS = '/users/user/get-settings'\n\n// TEXT COMMENT\nexport const ENDPOINT_TEXT_COMMENT_CREATE = '/comments/text-comment/create/'\nexport const ENDPOINT_TEXT_COMMENT_UPDATE = '/comments/text-comment/update/'\nexport const ENDPOINT_TEXT_COMMENT_DELETE = '/comments/text-comment/delete/'\nexport const ENDPOINT_TEXT_COMMENT_LIST = '/comments/text-comment/list'\n\n// TEXT COMMENT MODIFICATION\nexport const ENDPOINT_TEXT_COMMENT_MODIFICATION_CREATE = '/comments/text-comment-modification/create/'\nexport const ENDPOINT_TEXT_COMMENT_MODIFICATION_LIST_DELETE = '/comments/text-comment-modification/list-delete/'\n\n// VOICE RECORDING\nexport const ENDPOINT_VOICE_RECORDING_CREATE = '/comments/voice-recording/create/'\nexport const ENDPOINT_VOICE_RECORDING_DELETE = '/comments/voice-recording/delete/'\nexport const ENDPOINT_VOICE_RECORDING_LIST = '/comments/voice-recording/list'\n\n// TRACK\nexport const ENDPOINT_TRACK_CREATE = '/music/track/create/'\n\n// MUSIC\nexport const ENDPOINT_MUSIC_SEARCH = '/music/search'\n\n// QUEUE\nexport const ENDPOINT_QUEUE_CREATE = '/streams/queue/create/'\nexport const ENDPOINT_QUEUE_DELETE = '/streams/queue/delete/'\nexport const ENDPOINT_QUEUE_LIST = '/streams/queue/list'\n\n// STREAM\nexport const ENDPOINT_STREAM_GET = '/streams/stream/get'\nexport const ENDPOINT_STREAM_INITIALIZE = '/streams/stream/initialize/'\nexport const ENDPOINT_STREAM_NEXT_TRACK = '/streams/stream/next-track/'\nexport const ENDPOINT_STREAM_PAUSE_TRACK = '/streams/stream/pause-track/'\nexport const ENDPOINT_STREAM_PLAY_TRACK = '/streams/stream/play-track/'\nexport const ENDPOINT_STREAM_PREVIOUS_TRACK = '/streams/stream/previous-track/'\nexport const ENDPOINT_STREAM_SCAN_BACKWARD = '/streams/stream/scan-backward/'\nexport const ENDPOINT_STREAM_SCAN_FORWARD = '/streams/stream/scan-forward/'\n\n// MARKER\nexport const ENDPOINT_MARKER_CREATE = '/streams/marker/create/'\nexport const ENDPOINT_MARKER_DELETE = '/streams/marker/delete/'\nexport const ENDPOINT_MARKER_LIST = '/streams/marker/list'\n\n// QUEUE INTERVAL\nexport const ENDPOINT_QUEUE_INTERVAL_CREATE = '/streams/queue-interval/create/'\nexport const ENDPOINT_QUEUE_INTERVAL_DELETE = '/streams/queue-interval/delete/'\n","import {\n  ENDPOINT_TEXT_COMMENT_DELETE,\n  ENDPOINT_TEXT_COMMENT_UPDATE,\n  ENDPOINT_TEXT_COMMENT_MODIFICATION_LIST_DELETE,\n} from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nexport const fetchDeleteTextComment = async (textCommentUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_TEXT_COMMENT_DELETE,\n    { textCommentUuid: textCommentUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchUpdateTextComment = async (textCommentUuid, text) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_TEXT_COMMENT_UPDATE,\n    { textCommentUuid: textCommentUuid, text: text },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchListDeleteTextCommentModifications = async (textCommentUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_TEXT_COMMENT_MODIFICATION_LIST_DELETE,\n    { textCommentUuid: textCommentUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import { ENDPOINT_VOICE_RECORDING_CREATE, ENDPOINT_VOICE_RECORDING_DELETE } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nexport const fetchCreateVoiceRecording = async (audioFile, transcriptData, transcriptFinal) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_VOICE_RECORDING_CREATE,\n    {\n      audioFile: audioFile,\n      transcriptData: transcriptData,\n      transcriptFinal: transcriptFinal,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchDeleteVoiceRecording = async (voiceRecordingUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_VOICE_RECORDING_DELETE,\n    { voiceRecordingUuid: voiceRecordingUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from \"react\";\n// import NotableText from '../NotableText/NotableText'\nimport styles from './TextComment.module.css';\n\n\nfunction TextComment(props) {\n\n  /*\n   * 🎨\n   */\n  return (\n    <div className={styles.TextComment}>\n      {/*\n      <NotableText data={props.data} create={props.create}></NotableText>\n      */}\n\n      <span>\n        {props.data.text} &nbsp;\n      </span>\n\n      {/*\n      <button type=\"button\" onClick={async (e) => { await props.destroyModifications(props.data.uuid); }}>\n        Clear modifications\n      </button>\n      */}\n\n      <button type=\"button\" onClick={async (e) => { await props.destroy(props.data.uuid); }}>\n        Delete\n      </button>\n    </div>\n  );\n\n}\n\nexport default TextComment;\n","import React from \"react\";\nimport styles from './VoiceRecording.module.css';\nimport { fetchDeleteVoiceRecording } from './network';\n\n\nfunction VoiceRecording(props) {\n\n  /*\n   * When the user deletes a text comment.\n   */\n  const handleDelete = async function(e) {\n    e.preventDefault();\n    const voiceRecordingUuid = props.data.uuid;\n    await fetchDeleteVoiceRecording(voiceRecordingUuid);\n    await props.destroy(voiceRecordingUuid);\n  }\n\n  /*\n   * 🎨\n   */\n  const voiceRecording = props.data;\n  return (\n    <div className={styles.VoiceRecording}>\n      <p><i>\n        {\n          voiceRecording.transcriptFinal === 'null' ?\n          '<transcript not available>' : voiceRecording.transcriptFinal\n        }\n      </i></p>\n      <form onSubmit={async (e) => { await handleDelete(e); }}>\n        <button type=\"submit\">\n          Delete\n        </button>\n      </form>\n    </div>\n  );\n\n}\n\nexport default VoiceRecording;\n","import React, { useState } from \"react\";\nimport { connect } from 'react-redux'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport styles from './Chat.module.css';\nimport { fetchCreateTextComment } from './network'\nimport {\n  fetchDeleteTextComment,\n} from '../TextComment/network'\nimport {\n  fetchCreateVoiceRecording,\n  fetchDeleteVoiceRecording,\n} from '../VoiceRecording/network'\nimport TextComment from '../TextComment/TextComment'\nimport VoiceRecording from '../VoiceRecording/VoiceRecording'\nimport {\n  CLASS_TEXT_COMMENT,\n  CLASS_VOICE_RECORDING\n} from '../../config/model'\n\n\nfunction Chat(props) {\n\n  /*\n   * 🏗\n   */\n  const [text, setText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recorder] = useState(new MicRecorder({ bitRate: 320 }));\n  const [transcriptData] = useState([]);\n\n  /*\n   * ...\n   */\n  const destroyTextCommentModifications = () => {};\n  // const destroyTextCommentModifications = async function(textCommentUuid) {\n  //   await fetchListDeleteTextCommentModifications(textCommentUuid);\n  //   await props.dispatch({\n  //     type: 'textComment/clearModifications',\n  //     textCommentUuid: textCommentUuid,\n  //   });\n  // }\n\n  /*\n   * ...\n   */\n  const destroyTextComment = async function(textCommentUuid) {\n    // await fetchListDeleteTextCommentModifications(textCommentUuid);\n    await fetchDeleteTextComment(textCommentUuid);\n    await props.dispatch({\n      type: 'textComment/delete',\n      textCommentUuid: textCommentUuid,\n    });\n  }\n\n  /*\n   * ...\n   */\n  const destroyVoiceRecording = async function(voiceRecordingUuid) {\n    await fetchDeleteVoiceRecording(voiceRecordingUuid);\n    await props.dispatch({\n      type: 'voiceRecording/delete',\n      voiceRecordingUuid: voiceRecordingUuid,\n    });\n  }\n\n  /*\n   * When a user submits a new comment.\n   */\n  const createTextComment = async function(e) {\n    e.preventDefault();\n    const responseJson = await fetchCreateTextComment(text);\n\n    await props.dispatch({\n      type: 'textComment/create',\n      textComment: responseJson.data,\n    });\n\n    setText('');\n  }\n\n  /*\n   * Called by a child component when the user creates a text comment\n   * modification.\n   */\n  const createTextCommentModification = () => {};\n  // const createTextCommentModification = async function(textCommentUuid, textCommentModification) {\n  //   const textCommentIndex = _textComments.findIndex(t => t.uuid === textCommentUuid);\n  //   const modifications = _textComments[textCommentIndex].modifications;\n  //\n  //   modifications.push(textCommentModification);\n  //   const sortedModifications = modifications.sort((a, b) => {\n  //     return a.startPtr - b.startPtr;\n  //   });\n  //\n  //   _textComments[textCommentIndex].modifications = sortedModifications;\n  //   _setTextComments([..._textComments]);\n  // }\n\n  const { transcript, resetTranscript } = useSpeechRecognition();\n\n  /*\n   * ...\n   */\n  const handleRecord = function() {\n    if(!isRecording) {\n      if (SpeechRecognition.browserSupportsSpeechRecognition()) {\n        SpeechRecognition.startListening({ continuous: true });\n        // BUG: https://github.com/JamesBrill/react-speech-recognition/issues/81\n        //\n        // const recognition = SpeechRecognition.getRecognition();\n        // recognition.onresult = (e) => {\n        //   recognition.onresult(e);\n        //   const timeStamp = e.timeStamp,\n        //         transcript = e.results[0][0].transcript,\n        //         confidence = e.results[0][0].confidence,\n        //         isFinal = e.results[0].isFinal;\n        //   transcriptData.push({ timeStamp, transcript, confidence, isFinal });\n        //   setTranscriptData([...transcriptData]);\n        // }\n      }\n      recorder.start();\n      setIsRecording(true);\n    } else {\n      if (SpeechRecognition.browserSupportsSpeechRecognition()) {\n        SpeechRecognition.stopListening();\n      }\n\n      recorder.stop()\n        .getMp3().then(([buffer, blob]) => {\n          (async function () {\n            const file = new File(buffer, 'voice.mp3', {\n              type: blob.type,\n              lastModified: Date.now(),\n            });\n\n            const responseJson = await fetchCreateVoiceRecording(file, JSON.stringify(transcriptData), transcript);\n\n            await props.dispatch({\n              type: 'voiceRecording/create',\n              voiceRecording: responseJson.data,\n            });\n\n            if (SpeechRecognition.browserSupportsSpeechRecognition()) {\n              resetTranscript();\n            }\n          })()\n        });\n\n      setIsRecording(false);\n    }\n  }\n\n  /*\n   * This aggregates text comments and voice recordings into one data list,\n   * sorted by track timestamp.\n   */\n  let feed = props.feed;\n\n\n  /*\n   * 🎨\n   */\n  return (\n    <div className={styles.Chat}>\n      <div>\n        {feed.map((value, index) => {\n          if(value.class === CLASS_TEXT_COMMENT) {\n            return <TextComment key={index} data={value} destroy={destroyTextComment} destroyModifications={destroyTextCommentModifications} create={createTextCommentModification} />\n          } else if(value.class === CLASS_VOICE_RECORDING) {\n            return <VoiceRecording key={index} data={value} destroy={destroyVoiceRecording} />\n          } else {\n            return <></>;\n          }\n        })}\n      </div>\n\n      <form className={styles.CreateTextComment} onSubmit={async (e) => { await createTextComment(e); }}>\n        <button type=\"button\" onClick={handleRecord}>\n          Record\n        </button>\n        <input type=\"text\"\n               name=\"text\"\n               placeholder=\"text\"\n               value={text}\n               onChange={(e) => { setText(e.target.value); }} />\n        <button type=\"submit\">\n          Send\n        </button>\n      </form>\n\n      <div>\n      </div>\n    </div>\n  );\n\n}\n\nconst mapStateToProps = (state) => ({\n    stream: state.stream,\n    textComments: state.textComments,\n    voiceRecordings: state.voiceRecordings,\n    feed: state.feed,\n});\n\nexport default connect(mapStateToProps)(Chat);\n","const CLASS_TEXT_COMMENT = 'TextComment'\nconst CLASS_VOICE_RECORDING = 'VoiceRecording'\n\nexport { CLASS_TEXT_COMMENT, CLASS_VOICE_RECORDING }\n","import {\n  ENDPOINT_OBTAIN_TOKENS,\n  ENDPOINT_STREAM_INITIALIZE,\n  ENDPOINT_VERIFY_TOKEN,\n} from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchAuthToken = async (username, password) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_OBTAIN_TOKENS,\n    { username: username, password: password },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchInitializeStream = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_STREAM_INITIALIZE,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchVerifyToken = async () => {\n  const token = localStorage.getItem('accessToken');\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_VERIFY_TOKEN,\n    { token: token }\n  );\n  if(response.status !== 200) {\n    //throw new Error(\"Not logged in!\");\n    return undefined;\n  }\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from './Login.module.css';\n\nimport { fetchAuthToken, fetchInitializeStream } from './network';\n\n\nfunction Login(props) {\n\n  /*\n   * 🏗\n   */\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  const handleSubmit = async function(e) {\n    e.preventDefault();\n\n    const responseJson = await fetchAuthToken(username, password);\n    if(!responseJson.access || !responseJson.refresh) {\n      return;\n    }\n\n    localStorage.setItem('accessToken', responseJson.access);\n    localStorage.setItem('refreshToken', responseJson.refresh);\n\n    await fetchInitializeStream();\n\n    window.location.reload();\n  }\n\n  return (\n    <form className={styles.Login} onSubmit={async (e) => { await handleSubmit(e); }}>\n      <h3>Sign in</h3>\n      <p>If you have not created an account yet, then please <Link to=\"/signup\">Sign Up</Link> first.</p>\n\n      <label className={styles.FormBlock}>\n        Username\n        <input type=\"text\"\n               name=\"username\"\n               placeholder=\"username\"\n               value={username}\n               onChange={(e) => {setUsername(e.target.value)}} />\n      </label>\n\n      <label className={styles.FormBlock}>\n        Password\n        <input type=\"password\"\n               name=\"password\"\n               placeholder=\"password\"\n               value={password}\n               onChange={(e) => {setPassword(e.target.value)}} />\n      </label>\n\n      <label className={styles.FormBlock}>\n        <input type=\"checkbox\"\n               name=\"remember-me\"\n               value={rememberMe}\n               onChange={(e) => {setRememberMe(e.target.value)}} />\n        Remember Me\n      </label>\n\n      <div className={styles.FormBlock}>\n        <button type=\"submit\">\n          Sign In\n        </button>\n        <span><Link to=\"/forgotpassword\">Forgot Password?</Link></span>\n      </div>\n    </form>\n  );\n}\n\nexport default Login;\n","import { ENDPOINT_QUEUE_LIST, ENDPOINT_QUEUE_DELETE } from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches...\n */\nexport const fetchListQueues = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_QUEUE_LIST,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nexport const fetchDeleteQueue = async (queueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_QUEUE_DELETE,\n    { queueUuid: queueUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","/*\n * Create a marker relevant to a queue item (track).\n */\nexport const markerCreate = function(state, action) {\n  const trackMarkerMap = { ...state.trackMarkerMap },\n        queueUuid = action.queueUuid,\n        marker = action.marker,\n        markers = [...trackMarkerMap[queueUuid], marker],\n        sortedMarkers = markers.sort((a, b) => {\n          return a.timestampMilliseconds - b.timestampMilliseconds;\n        });\n  trackMarkerMap[queueUuid] = sortedMarkers;\n  return {\n    ...state,\n    trackMarkerMap: trackMarkerMap,\n  };\n}\n\n/*\n * Delete a marker relevant to a queue item (track).\n */\nexport const markerDelete = function(state, action) {\n  const trackMarkerMap = { ...state.trackMarkerMap },\n        queueUuid = action.queueUuid,\n        marker = action.marker,\n        markers = trackMarkerMap[action.queueUuid],\n        filteredMarkers = markers.filter(m => m.uuid !== marker.uuid);\n  trackMarkerMap[queueUuid] = filteredMarkers;\n  return {\n    ...state,\n    trackMarkerMap: trackMarkerMap,\n  };\n}\n\n/*\n * Set the markers on a queue item (track).\n */\nexport const markerList = function(state, action) {\n  const queueUuid = action.queueUuid,\n        markers = action.markers,\n        trackMarkerMap = { ...state.trackMarkerMap };\n  trackMarkerMap[queueUuid] = markers;\n  return {\n    ...state,\n    trackMarkerMap: trackMarkerMap\n  };\n}\n","/*\n * Used to \"findIndex\" by uuid in an array.\n */\nconst findByUuid = function(uuid) {\n  return (o => o.uuid === uuid);\n}\n\n\n/*\n * Used to \"filter\" out by uuid in an array.\n */\nconst filterByUuid = function(uuid) {\n  return (o => o.uuid !== uuid);\n}\n\n\n/*\n * Used to \"sort\" and array containing queue intervals.\n */\nconst sortQueueIntervals = function(a, b) {\n  if(!b.upperBound) {\n    return -1;\n  } else if(!a.upperBound) {\n    return 1;\n  } else {\n    return (\n      a.upperBound.timestampMilliseconds -\n      a.upperBound.timestampMilliseconds\n    );\n  }\n}\n\n\n/*\n * Create a queue interval relevant to a queue item (track).\n */\nexport const queueIntervalCreate = function(state, action) {\n  const queueInterval = action.queueInterval,\n        queueUuid = action.queueUuid,\n        parentQueueUuid = action.parentQueueUuid;\n\n  // get the queue that the queue interval belongs too.\n  let queues = state.nextUpQueues;\n  let parentIndex, index;\n  if(parentQueueUuid) {\n    parentIndex = queues.findIndex(findByUuid(parentQueueUuid));\n    queues = queues[parentIndex].children;\n  }\n  index = queues.findIndex(findByUuid(queueUuid));\n  const trackQueue = queues[index];\n\n  console.log(trackQueue);\n\n  // add queue interval to that queue (and sort).\n  const queueIntervals = [...trackQueue.intervals, queueInterval],\n        sortedQueueIntervals = queueIntervals.sort(sortQueueIntervals);\n\n  // save the state\n  const nextUpQueues = [...state.nextUpQueues];\n  if(parentIndex) {\n    nextUpQueues[parentIndex].children[index].intervals = sortedQueueIntervals;\n  } else {\n    nextUpQueues[index].intervals = sortedQueueIntervals;\n  }\n  return {\n    ...state,\n    nextUpQueues: nextUpQueues,\n  };\n}\n\n\n/*\n * Delete a queue interval relevant to a queue item (track).\n */\nexport const queueIntervalDelete = function(state, action) {\n  const queueInterval = action.queueInterval,\n        queueUuid = action.queueUuid,\n        parentQueueUuid = action.parentQueueUuid;\n\n  // get the queue that the queue interval belongs too.\n  let queues = state.nextUpQueues;\n  let parentIndex, index;\n  if(parentQueueUuid) {\n    parentIndex = queues.findIndex(findByUuid(parentQueueUuid));\n    queues = queues[parentIndex].children;\n  }\n  index = queues.findIndex(findByUuid(queueUuid));\n  const trackQueue = queues[index];\n\n  // delete queue interval from that queue.\n  const queueIntervals = [...trackQueue.intervals],\n        filteredQueueIntervals = queueIntervals.filter(filterByUuid(queueInterval.uuid));\n\n  // save the state\n  const nextUpQueues = [...state.nextUpQueues];\n  if(parentIndex) {\n    nextUpQueues[parentIndex].children[index].intervals = filteredQueueIntervals;\n  } else {\n    nextUpQueues[index].intervals = filteredQueueIntervals;\n  }\n  return {\n   ...state,\n   nextUpQueues: nextUpQueues,\n  };\n}\n","import { createStore } from 'redux';\nimport {\n  markerCreate,\n  markerDelete,\n  markerList,\n} from './reducers/marker'\nimport {\n  queueIntervalCreate,\n  queueIntervalDelete,\n} from './reducers/queueInterval'\n\n\nconst initialState = {\n  nextUpQueues: [],\n  lastUpQueues: [],\n  _lastPlayed: undefined,\n  textComments: [],\n  voiceRecordings: [],\n  feed: [],\n  playback: {\n    nowPlaying: undefined,\n  },\n  userSettings: undefined,\n  trackMarkerMap: {},\n  queueIntervalMap: {},\n}\n\n\nfunction streamSet(state, action) {\n  const stream = action.stream,\n        obj = {\n          ...state,\n          stream: stream,\n        };\n\n  if(!stream.isPlaying && !stream.isPaused && stream.nowPlaying) {\n    obj.lastUp = stream.nowPlaying;\n    obj._lastPlayed = stream.nowPlaying;\n    obj.stream.nowPlaying = undefined;\n  }\n\n  return obj;\n}\n\n\nfunction streamPrevTrack(state, action) {\n  const lastUpQueues = [...state.lastUpQueues];\n  const nowPlaying = lastUpQueues[lastUpQueues.length - 1];\n  return {\n      ...state,\n      stream: {\n        ...state.stream,\n        startedAt: action.startedAt,\n        nowPlaying: nowPlaying,\n        isPlaying: true,\n        isPaused: false,\n      },\n      _lastPlayed: undefined,\n  };\n}\n\n\nfunction streamNextTrack(state, action) {\n  const nextUpQueues = [...state.nextUpQueues];\n  const nowPlaying = (\n    nextUpQueues[0].children.length ?\n      nextUpQueues[0].children[0] :\n      nextUpQueues[0]\n  );\n  return {\n      ...state,\n      stream: {\n        ...state.stream,\n        startedAt: action.startedAt,\n        nowPlaying: nowPlaying,\n        isPlaying: true,\n        isPaused: false,\n      },\n      _lastPlayed: undefined,\n  };\n}\n\n\nfunction streamExpire(state, action) {\n  const stream = { ...state.stream },\n        _lastPlayed = stream.nowPlaying;\n\n  stream.isPlaying = false;\n  stream.isPaused = false;\n  stream.nowPlaying = undefined;\n\n  return { ...state, stream: stream, _lastPlayed: _lastPlayed };\n}\n\n\nfunction playbackPlay(state, action) {\n  return {\n    ...state,\n    playback: {\n      ...state.playback,\n      nowPlaying: state.stream.nowPlaying,\n    },\n  };\n}\n\n\nfunction queueListSet(state, action) {\n  const lastUpQueues = action.lastUpQueues,\n        nextUpQueues = action.nextUpQueues,\n        _lastPlayed = state._lastPlayed;\n\n  if(_lastPlayed) {\n    lastUpQueues.push(_lastPlayed);\n  }\n\n  let stream = state.stream;\n  if(!stream.isPlaying && !stream.isPaused && stream.nowPlaying) {\n    lastUpQueues.push(stream.nowPlaying);\n    stream = { ...stream, nowPlaying: undefined }\n  }\n\n  const lastUp = (\n          !lastUpQueues.length ?\n            undefined :\n            lastUpQueues[lastUpQueues.length - 1]\n        ),\n        nextUp = (\n          !nextUpQueues.length ? undefined : (\n            !nextUpQueues[0].children.length ?\n              nextUpQueues[0] :\n              nextUpQueues[0].children[0]\n          )\n        );\n  return {\n    ...state,\n    stream: stream,\n    lastUp: lastUp,\n    lastUpQueues: lastUpQueues,\n    nextUp: nextUp,\n    nextUpQueues: nextUpQueues,\n  }\n}\n\n\nfunction queueDeleteNode(state, action) {\n  const queues = state.nextUpQueues,\n        filteredQueues = queues.filter(i => i.uuid !== action.queueUuid);\n\n  return {\n    ...state,\n    nextUpQueues: filteredQueues,\n  }\n}\n\n\nfunction queueDeleteChildNode(state, action) {\n  let queues = [...state.nextUpQueues];\n  const parentIndex = queues.findIndex(i => i.uuid === action.parentUuid),\n        children = queues[parentIndex].children,\n        filteredChildren = children.filter(i => i.uuid !== action.queueUuid);\n\n  queues[parentIndex].children = filteredChildren;\n\n  if(!filteredChildren.length) {\n    queues = queues.filter(i => i.uuid !== action.parentUuid);\n  }\n\n  return {\n    ...state,\n    nextUpQueues: queues,\n  }\n}\n\n\nfunction textCommentListSet(state, action) {\n  const textComments = action.textComments,\n        aggregateFeed = [...textComments, ...state.voiceRecordings];\n\n  const feed = aggregateFeed.sort((a, b) => {\n    return a.timestampMilliseconds - b.timestampMilliseconds;\n  });\n\n  return {\n    ...state,\n    textComments: action.textComments,\n    feed: feed,\n  }\n}\n\n\nfunction textCommentCreate(state, action) {\n  const textComments = [...state.textComments, action.textComment],\n        aggregateFeed = [...textComments, ...state.voiceRecordings],\n        feed = aggregateFeed.sort((a, b) => {\n          return a.timestampMilliseconds - b.timestampMilliseconds;\n        });\n\n  return {\n    ...state,\n    textComments: textComments,\n    feed: feed,\n  }\n}\n\n\n// function textCommentClearModifications(state, action) {\n//   const textCommentIndex = state.textComments.findIndex(t => t.uuid === action.textCommentUuid),\n//         textComments = [...state.textComments];\n//\n//   textComments[textCommentIndex].modifications = [];\n//\n//   const aggregateFeed = [...textComments, ...state.voiceRecordings],\n//         feed = aggregateFeed.sort((a, b) => {\n//           return a.timestampMilliseconds - b.timestampMilliseconds;\n//         });\n//\n//   return {\n//     ...state,\n//     textComments: textComments,\n//     feed: feed,\n//   }\n// }\n\n\nfunction textCommentDelete(state, action) {\n  const textComments = state.textComments.filter(i => i.uuid !== action.textCommentUuid),\n        aggregateFeed = [...textComments, ...state.voiceRecordings],\n        feed = aggregateFeed.sort((a, b) => {\n          return a.timestampMilliseconds - b.timestampMilliseconds;\n        });\n\n  return {\n    ...state,\n    textComments: textComments,\n    feed: feed,\n  }\n}\n\n\nfunction voiceRecordingCreate(state, action) {\n  const voiceRecordings = [...state.voiceRecordings, action.voiceRecording],\n        aggregateFeed = [...state.textComments, ...voiceRecordings],\n        feed = aggregateFeed.sort((a, b) => {\n          return a.timestampMilliseconds - b.timestampMilliseconds;\n        });\n\n  return {\n    ...state,\n    voiceRecordings: voiceRecordings,\n    feed: feed,\n  }\n}\n\n\nfunction voiceRecordingListSet(state, action) {\n  const voiceRecordings = action.voiceRecordings,\n        aggregateFeed = [...state.textComments, ...voiceRecordings],\n        feed = aggregateFeed.sort((a, b) => {\n          return a.timestampMilliseconds - b.timestampMilliseconds;\n        });\n\n  return {\n    ...state,\n    voiceRecordings: action.voiceRecordings,\n    feed: feed,\n  }\n}\n\n\nfunction voiceRecordingDelete(state, action) {\n  const voiceRecordings = state.voiceRecordings.filter(i => i.uuid !== action.voiceRecordingUuid),\n        aggregateFeed = [...state.textComments, ...voiceRecordings],\n        feed = aggregateFeed.sort((a, b) => {\n          return a.timestampMilliseconds - b.timestampMilliseconds;\n        });\n\n  return {\n    ...state,\n    voiceRecordings: voiceRecordings,\n    feed: feed,\n  }\n}\n\nfunction userGetSettings(state, action) {\n  return {\n    ...state,\n    userSettings: action.userSettings,\n  }\n}\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"stream/set\":\n      return streamSet(state, action);\n    case \"stream/prevTrack\":\n      return streamPrevTrack(state, action);\n    case \"stream/nextTrack\":\n      return streamNextTrack(state, action);\n    case \"stream/expire\":\n      return streamExpire(state, action);\n    case \"playback/play\":\n      return playbackPlay(state, action);\n    case \"queue/listSet\":\n      return queueListSet(state, action);\n    case \"queue/deleteNode\":\n      return queueDeleteNode(state, action);\n    case \"queue/deleteChildNode\":\n      return queueDeleteChildNode(state, action);\n    case \"textComment/listSet\":\n      return textCommentListSet(state, action);\n    case \"textComment/create\":\n      return textCommentCreate(state, action);\n    case \"textComment/delete\":\n      return textCommentDelete(state, action);\n    // case \"textComment/clearModifications\":\n    //   return textCommentClearModifications(state, action);\n    case \"voiceRecording/create\":\n      return voiceRecordingCreate(state, action);\n    case \"voiceRecording/listSet\":\n      return voiceRecordingListSet(state, action);\n    case \"voiceRecording/delete\":\n      return voiceRecordingDelete(state, action);\n    case \"user/get-settings\":\n      return userGetSettings(state, action);\n    case \"marker/create\":\n      return markerCreate(state, action.payload);\n    case \"marker/delete\":\n      return markerDelete(state, action.payload);\n    case \"marker/list\":\n      return markerList(state, action.payload);\n    case \"queueInterval/create\":\n      return queueIntervalCreate(state, action.payload);\n    case \"queueInterval/delete\":\n      return queueIntervalDelete(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n\nexport const store = createStore(reducer);\n","import {\n  ENDPOINT_MARKER_CREATE,\n  ENDPOINT_MARKER_DELETE,\n  ENDPOINT_MARKER_LIST,\n} from '../../config/api';\nimport { TYPE_GET, TYPE_POST } from '../../config/global';\nimport { fetchBackend } from '../../utils/network';\nimport { store } from '../../utils/redux';\n\n\n/*\n * Creates a marker. The queue context is passed so the Redux state may be\n * updated.\n */\nexport const fetchStreamMarkerCreate = async (trackUuid, timestampMilliseconds, queueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_MARKER_CREATE,\n    { trackUuid, timestampMilliseconds, queueUuid }\n  );\n  const responseJson = await response.json();\n  await store.dispatch(responseJson.redux);\n};\n\n\n/*\n * Deletes a marker. The queue context is passed so the Redux state may be\n * updated.\n */\nexport const fetchStreamMarkerDelete = async (markerUuid, queueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_MARKER_DELETE,\n    { markerUuid, queueUuid }\n  );\n  const responseJson = await response.json();\n  await store.dispatch(responseJson.redux);\n};\n\n/*\n * Fetches a list of markers for a given track. The queue context is passed so\n * the Redux state may be updated.\n */\nexport const fetchStreamMarkerList = async (trackUuid, queueUuid) => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_MARKER_LIST,\n    { trackUuid, queueUuid }\n  );\n  const responseJson = await response.json();\n  await store.dispatch(responseJson.redux);\n};\n","import {\n  ENDPOINT_QUEUE_INTERVAL_CREATE,\n  ENDPOINT_QUEUE_INTERVAL_DELETE,\n} from '../../config/api';\nimport { TYPE_POST } from '../../config/global';\nimport { fetchBackend } from '../../utils/network';\nimport { store } from '../../utils/redux';\n\n/*\n * Fetches...\n */\nexport const fetchStreamQueueIntervalCreate = async (queueUuid, lowerBoundMarkerUuid, upperBoundMarkerUuid, isMuted, repeatCount, parentQueueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_QUEUE_INTERVAL_CREATE,\n    { queueUuid, lowerBoundMarkerUuid, upperBoundMarkerUuid, isMuted, repeatCount, parentQueueUuid }\n  );\n  const responseJson = await response.json();\n  await store.dispatch(responseJson.redux);\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchStreamQueueIntervalDelete = async (queueIntervalUuid, queueUuid, parentQueueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_QUEUE_INTERVAL_DELETE,\n    { queueIntervalUuid, queueUuid, parentQueueUuid }\n  );\n  const responseJson = await response.json();\n  await store.dispatch(responseJson.redux);\n};\n","import React from \"react\";\nimport { fetchStreamMarkerDelete } from './network';\n\n\nfunction TrackMarker(props) {\n\n  const { trackMarker, queueUuid } = props.data;\n\n  const deleteTrackMarker = async function() {\n    await fetchStreamMarkerDelete(trackMarker.uuid, queueUuid);\n  }\n\n  return (\n    <div>\n      <span>\n        @ {trackMarker.timestampMilliseconds / 1000}\n      </span>\n      <button onClick={deleteTrackMarker}>Delete</button>\n    </div>\n  );\n}\n\nexport default TrackMarker;\n","import React from \"react\";\nimport { fetchStreamQueueIntervalDelete } from './network';\n\n\nfunction QueueInterval(props) {\n\n  const { queueInterval, queueUuid, parentQueueUuid } = props.data;\n\n  const deleteQueueInterval = async function() {\n    await fetchStreamQueueIntervalDelete(queueInterval.uuid, queueUuid, parentQueueUuid);\n  }\n\n  const lowerBound = queueInterval.lowerBound ?\n    queueInterval.lowerBound.timestampMilliseconds / 1000 : 'beginning';\n  const upperBound = queueInterval.upperBound ?\n    queueInterval.upperBound.timestampMilliseconds / 1000 : 'end';\n\n  return (\n    <div>\n      <span>\n        {lowerBound} =>\n        {upperBound}\n        ({queueInterval.isMuted ? 'muted' : 'played'})\n      </span>\n      <button onClick={deleteQueueInterval}>Delete</button>\n    </div>\n  );\n}\n\nexport default QueueInterval;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport {\n  fetchStreamMarkerCreate,\n  fetchStreamMarkerList,\n} from '../TrackMarker/network';\nimport {\n  fetchStreamQueueIntervalCreate,\n} from '../QueueInterval/network';\nimport TrackMarker from '../TrackMarker/TrackMarker'\nimport QueueInterval from '../QueueInterval/QueueInterval'\n\n\nfunction QueueEdit(props) {\n\n  const queue = props.data,\n        queueUuid = queue.uuid,\n        parentQueueUuid = queue.parentUuid,\n        trackMarkerMap = props.trackMarkerMap;\n\n  const markers = trackMarkerMap[queueUuid] || [];\n\n  const [formMarkerTimestamp, setFormMarkerTimestamp] = useState('');\n  const [lowerBoundMarkerUuid, setLowerBoundMarkerUuid] = useState('null');\n  const [upperBoundMarkerUuid, setUpperBoundMarkerUuid] = useState('null');\n\n  useEffect(() => {\n    async function loadData() {\n      await fetchStreamMarkerList(queue.track.uuid, queueUuid);\n    }\n    loadData();\n  }, [queue, queueUuid])\n\n  const createTrackMarker = async function() {\n    await fetchStreamMarkerCreate(queue.track.uuid, formMarkerTimestamp, queueUuid);\n    setFormMarkerTimestamp('');\n  }\n\n  const createQueueInterval = async function() {\n    await fetchStreamQueueIntervalCreate(\n      queue.uuid,\n      lowerBoundMarkerUuid,\n      upperBoundMarkerUuid,\n      true,\n      null,\n      parentQueueUuid,\n    )\n  }\n\n  return (\n    <div>\n      <p>Markers</p>\n      {markers.map((value, index) => (\n        <TrackMarker key={index}\n                     data={{\n                       trackMarker: value,\n                       queueUuid: queueUuid,\n                     }} />\n      ))}\n      <div>\n        <input type=\"text\"\n               name=\"timestampMilliseconds\"\n               placeholder=\"timestamp\"\n               value={formMarkerTimestamp}\n               onChange={(e) => {setFormMarkerTimestamp(e.target.value)}} />\n        <button onClick={createTrackMarker}>Create Marker</button>\n      </div>\n      <p>Intervals</p>\n      {queue.intervals.map((value, index) => (\n        <QueueInterval key={index}\n                       data={{\n                         queueInterval: value,\n                         queueUuid: queueUuid,\n                         parentQueueUuid: parentQueueUuid,\n                       }} />\n      ))}\n      <div>\n        <select value={lowerBoundMarkerUuid} onChange={(e) => {setLowerBoundMarkerUuid(e.target.value)}}>\n          <option value={'null'}>Beginning</option>\n          {markers.map((value, index) => (\n            <option key={index} value={value.uuid}>@ {value.timestampMilliseconds}</option>\n          ))}\n        </select>\n        <select value={upperBoundMarkerUuid} onChange={(e) => {setUpperBoundMarkerUuid(e.target.value)}}>\n          <option value={'null'}>End</option>\n          {markers.map((value, index) => (\n            <option key={index} value={value.uuid}>@ {value.timestampMilliseconds}</option>\n          ))}\n        </select>\n        <button onClick={createQueueInterval}>Mute Interval</button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  trackMarkerMap: state.trackMarkerMap,\n});\n\nexport default connect(mapStateToProps)(QueueEdit);\n","import React, { useState } from \"react\";\nimport { connect } from 'react-redux'\nimport QueueEdit from '../QueueEdit/QueueEdit'\nimport styles from './QueueTrack.module.css';\n\n\nfunction QueueTrack(props) {\n\n  /*\n   * 🏗\n   */\n  const queue = props.data,\n        stream = props.stream,\n        lastUp = props.lastUp;\n\n  const [showEditing, setShowEditing] = useState(false);\n\n  const edit = async function(e) {\n    setShowEditing(true);\n  }\n\n  const save = async function(e) {\n    setShowEditing(false);\n  }\n\n  /*\n   * 🎨\n   */\n  const currentIndex = stream?.nowPlaying?.index || lastUp?.index;\n  const isNextUp = !currentIndex || currentIndex < queue.index;\n  const indent = queue.parentUuid && isNextUp ? '-' : '';\n  return (\n    <div className={styles.QueueTrack}>\n      <span>\n        {indent}\n        {queue.track.name}\n      </span>\n      {isNextUp &&\n        <>\n          <button className={styles.Button} type=\"button\" onClick={async (e) => { await props.destroy(queue); }}>\n            Delete\n          </button>\n          {!showEditing &&\n            <button className={styles.Button} type=\"button\" onClick={edit}>\n              Edit\n            </button>\n          }\n          {showEditing &&\n            <button className={styles.Button} type=\"button\" onClick={save}>\n              Done\n            </button>\n          }\n        </>\n      }\n      {showEditing &&\n        <QueueEdit data={queue}/>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  stream: state.stream,\n  lastUp: state.lastUp,\n});\n\nexport default connect(mapStateToProps)(QueueTrack);\n","import React, { useState } from \"react\";\nimport { connect } from 'react-redux'\nimport styles from './QueueCollection.module.css';\nimport QueueTrack from '../QueueTrack/QueueTrack'\n\n\nfunction QueueCollection(props) {\n\n  /*\n   * 🏗\n   */\n  const queue = props.data,\n        stream = props.stream,\n        lastUp = props.lastUp,\n        queueUuid = props.data.uuid;\n\n  const isCurrentlyPlayingCollection = (\n    // Stream is NOW playing - \"now playing\" belongs to same parent UUID\n    (stream?.isPlaying && stream?.nowPlaying?.parentUuid === queueUuid) ||\n    // Stream is NOT playing - \"last up\" belongs to same parent UUID\n    (!stream?.isPlaying && lastUp?.parentUuid && lastUp?.parentUuid === queueUuid)\n  );\n\n\n  const [reveal, setReveal] = useState(isCurrentlyPlayingCollection);\n\n  /*\n   * When...\n   */\n  const toggleReveal = function(e) {\n    setReveal(!reveal);\n  }\n\n  /*\n   * 🎨\n   */\n  return (\n    <div className={styles.QueueCollection}>\n      <div className={styles.Item}>\n        <span>\n          {queue.collection.name}\n        </span>\n        {!isCurrentlyPlayingCollection &&\n          <button className={styles.Button} type=\"button\" onClick={async (e) => { await props.destroy(queue); }}>\n            Delete\n          </button>\n        }\n        {queue.children.length > 0 && !reveal &&\n          <button className={styles.Button} type=\"button\" onClick={toggleReveal}>\n            More\n          </button>\n        }\n        {queue.children.length > 0 && reveal &&\n          <button className={styles.Button} type=\"button\" onClick={toggleReveal}>\n            Less\n          </button>\n        }\n      </div>\n      {queue.children.length > 0 && reveal &&\n        <div className={styles.Children}>\n          {queue.children.map((value, index) => (\n            <QueueTrack key={index}\n                        data={value}\n                        destroy={props.destroy}>\n            </QueueTrack>\n          ))}\n        </div>\n      }\n    </div>\n  );\n\n}\n\nconst mapStateToProps = (state) => ({\n  stream: state.stream,\n  lastUp: state.lastUp,\n});\n\nexport default connect(mapStateToProps)(QueueCollection);\n","import { connect } from 'react-redux'\nimport styles from './Queue.module.css';\nimport { fetchDeleteQueue } from './network'\nimport QueueCollection from '../QueueCollection/QueueCollection'\nimport QueueTrack from '../QueueTrack/QueueTrack'\n\n\nfunction Queue(props) {\n\n  /*\n   * Called inside a child component, this first deletes the queue from the\n   * backend, then, on success, it deletes it from the front-end model and\n   * view.\n   */\n  const destroyQueueItem = async function(queue) {\n    const queueUuid = queue.uuid;\n\n    await fetchDeleteQueue(queueUuid);\n\n    const parentUuid = queue.parentUuid;\n    if(parentUuid) {\n      props.dispatch({\n        type: 'queue/deleteChildNode',\n        parentUuid: parentUuid,\n        queueUuid: queueUuid,\n      });\n    } else {\n      props.dispatch({\n        type: 'queue/deleteNode',\n        queueUuid: queueUuid,\n      });\n    }\n  }\n\n  /*\n   * 🎨\n   */\n  return (\n    <div className={styles.Queue}>\n      <p><i>Last up...</i></p>\n      <div>\n        {props.lastUpQueues.map((value, index) => {\n          if(value.track) {\n            return (\n              <QueueTrack key={index}\n                          data={value}\n                          destroy={() => {}}>\n              </QueueTrack>\n            );\n          } else {\n            return <></>;\n          }\n        })}\n      </div>\n      <div>\n        <p><i>Now playing...</i></p>\n        <p>{props.stream?.nowPlaying?.track.name}</p>\n      </div>\n      <p><i>Next up...</i></p>\n      <div>\n        {props.nextUpQueues.map((value, index) => {\n          if(value.collection) {\n            return (\n              <QueueCollection key={value.uuid}\n                               data={value}\n                               destroy={destroyQueueItem}>\n              </QueueCollection>\n            );\n          } else if(value.track) {\n            return (\n              <QueueTrack key={value.uuid}\n                          data={value}\n                          destroy={destroyQueueItem}>\n              </QueueTrack>\n            );\n          } else {\n            return <></>;\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  stream: state.stream,\n  nextUpQueues: state.nextUpQueues,\n  lastUpQueues: state.lastUpQueues,\n});\n\nexport default connect(mapStateToProps)(Queue);\n","import { ENDPOINT_MUSIC_SEARCH, ENDPOINT_QUEUE_CREATE } from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchSearchMusicLibrary = async (query, providerSpotify, providerYouTube, providerJukeboxRadio, formatTrack, formatAlbum, formatPlaylist, formatVideo) => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_MUSIC_SEARCH,\n    {\n      query,\n      providerSpotify,\n      providerYouTube,\n      providerJukeboxRadio,\n      formatTrack,\n      formatAlbum,\n      formatPlaylist,\n      formatVideo,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchCreateQueue = async (className, genericUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_QUEUE_CREATE,\n    { className, genericUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\n\n\nfunction SearchResult(props) {\n  const searchResult = props.data;\n  return (\n    <div>\n      <span>\n        {searchResult.provider} {searchResult.format} {searchResult.name}\n      </span>\n      <button type=\"button\" onClick={async (e) => { await props.addToQueue(props.data.class, props.data.uuid); }}>\n        Add\n      </button>\n    </div>\n  );\n}\n\nexport default SearchResult;\n","import React, { useState } from \"react\";\nimport styles from './Search.module.css';\n\nimport { fetchSearchMusicLibrary, fetchCreateQueue } from './network';\nimport SearchResult from '../SearchResult/SearchResult'\n\n\nfunction Search(props) {\n\n  /*\n   * 🏗\n   */\n\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [query, setQuery] = useState([]);\n\n  // NOTE: These could be condensed, but I prefer explicitly writing them out.\n  const [serviceSpotify, setServiceSpotify] = useState(true);\n  const [serviceYouTube, setServiceYouTube] = useState(true);\n  const [serviceJukeboxRadio, setServiceJukeboxRadio] = useState(true);\n\n  const [formatTrack, setFormatTrack] = useState(true);\n  const [formatAlbum, setFormatAlbum] = useState(true);\n  const [formatPlaylist, setFormatPlaylist] = useState(true);\n  const [formatVideo, setFormatVideo] = useState(true);\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  const handleSubmit = async function(e) {\n    e.preventDefault();\n    const responseJson = await fetchSearchMusicLibrary(\n      query,\n      serviceSpotify,\n      serviceYouTube,\n      serviceJukeboxRadio,\n      formatTrack,\n      formatAlbum,\n      formatPlaylist,\n      formatVideo,\n    );\n    setSearchResults(responseJson.data);\n  }\n\n  /*\n   * When...\n   */\n  const addToQueue = async function(className, genericUuid) {\n    await fetchCreateQueue(\n      className,\n      genericUuid,\n    );\n    setSearchResults([]);\n  }\n\n  return (\n    <div>\n      <form className={styles.Login} onSubmit={async (e) => { await handleSubmit(e); }}>\n        <h3>Search</h3>\n\n        <label className={styles.FormBlock}>\n          Query &nbsp;\n          <input type=\"text\"\n                 name=\"query\"\n                 placeholder=\"\"\n                 value={query}\n                 onChange={(e) => {setQuery(e.target.value)}} />\n        </label>\n\n        <br></br>\n\n        <div className={styles.FormBlock}>\n          <label>\n            <input type=\"checkbox\"\n                   checked={serviceSpotify}\n                   onChange={(e) => {setServiceSpotify(e.target.checked)}} />\n            Spotify\n          </label>\n\n          <label>\n            <input type=\"checkbox\"\n                   name=\"provider.youTube\"\n                   checked={serviceYouTube}\n                   onChange={(e) => {setServiceYouTube(e.target.checked)}} />\n            YouTube\n          </label>\n\n          <label>\n            <input type=\"checkbox\"\n                   name=\"provider.jukeboxRadio\"\n                   checked={serviceJukeboxRadio}\n                   onChange={(e) => {setServiceJukeboxRadio(e.target.checked)}} />\n            Jukebox Radio\n          </label>\n        </div>\n\n        <div className={styles.FormBlock}>\n          <label>\n            <input type=\"checkbox\"\n                   checked={formatTrack}\n                   onChange={(e) => {setFormatTrack(e.target.checked)}} />\n            Track\n          </label>\n\n          <label>\n            <input type=\"checkbox\"\n                   checked={formatAlbum}\n                   onChange={(e) => {setFormatAlbum(e.target.checked)}} />\n            Album\n          </label>\n\n          <label>\n            <input type=\"checkbox\"\n                   checked={formatPlaylist}\n                   onChange={(e) => {setFormatPlaylist(e.target.checked)}} />\n            Playlist\n          </label>\n\n          <label>\n            <input type=\"checkbox\"\n                   checked={formatVideo}\n                   onChange={(e) => {setFormatVideo(e.target.checked)}} />\n            Video\n          </label>\n        </div>\n\n        <br></br>\n\n        <div className={styles.FormBlock}>\n          <button type=\"submit\">\n            Search\n          </button>\n        </div>\n      </form>\n\n      <br></br>\n\n      <div>\n        {searchResults.map((value, index) => (\n          <SearchResult key={index} data={value} addToQueue={addToQueue}></SearchResult>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import { ENDPOINT_TRACK_CREATE } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches...\n */\nexport const fetchCreateTrack = async (audioFile, imageFile, trackName, artistName, albumName) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_TRACK_CREATE,\n    {\n      audioFile: audioFile,\n      imageFile: imageFile,\n      trackName: trackName,\n      artistName: artistName,\n      albumName: albumName,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React, { useState } from \"react\";\nimport styles from './Upload.module.css';\n\nimport { fetchCreateTrack } from './network';\n\n\nfunction Upload(props) {\n\n  /*\n   * 🏗\n   */\n  const [audioFile, setAudioFile] = useState('');\n  const [imageFile, setImageFile] = useState('');\n  const [trackName, setTrackName] = useState('');\n  const [artistName, setArtistName] = useState('');\n  const [albumName, setAlbumName] = useState('');\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  const handleSubmit = async function(e) {\n    e.preventDefault();\n    await fetchCreateTrack(\n      audioFile,\n      imageFile,\n      trackName,\n      artistName,\n      albumName,\n    );\n    setTrackName('');\n    setArtistName('');\n    setAlbumName('');\n  }\n\n  return (\n    <form className={styles.Login} onSubmit={async (e) => { await handleSubmit(e); }}>\n      <h3>Upload</h3>\n\n      <label className={styles.FormBlock}>\n        Audio file\n        <input type=\"file\"\n               name=\"audioFile\"\n               onChange={(e) => {setAudioFile(e.target.files[0])}} />\n      </label>\n\n      <label className={styles.FormBlock}>\n        Image file\n        <input type=\"file\"\n               name=\"imageFile\"\n               onChange={(e) => {setImageFile(e.target.files[0])}} />\n      </label>\n\n      <br></br>\n\n      <label className={styles.FormBlock}>\n        Track name\n        <input type=\"text\"\n               name=\"trackName\"\n               placeholder=\"Track name\"\n               value={trackName}\n               onChange={(e) => {setTrackName(e.target.value)}} />\n      </label>\n\n      <label className={styles.FormBlock}>\n        Artist name\n        <input type=\"text\"\n               name=\"artistName\"\n               placeholder=\"Artist name\"\n               value={artistName}\n               onChange={(e) => {setArtistName(e.target.value)}} />\n      </label>\n\n      <label className={styles.FormBlock}>\n        Album name\n        <input type=\"text\"\n               name=\"albumName\"\n               placeholder=\"Album name\"\n               value={albumName}\n               onChange={(e) => {setAlbumName(e.target.value)}} />\n      </label>\n\n      <br></br>\n\n      <div className={styles.FormBlock}>\n        <button type=\"submit\">\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Upload;\n","import {\n  ENDPOINT_STREAM_GET,\n  ENDPOINT_STREAM_NEXT_TRACK,\n  ENDPOINT_STREAM_PAUSE_TRACK,\n  ENDPOINT_STREAM_PLAY_TRACK,\n  ENDPOINT_STREAM_PREVIOUS_TRACK,\n  ENDPOINT_STREAM_SCAN_BACKWARD,\n  ENDPOINT_STREAM_SCAN_FORWARD,\n} from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nconst fetchStream = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_STREAM_GET,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchNextTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_STREAM_NEXT_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPauseTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_STREAM_PAUSE_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPlayTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_STREAM_PLAY_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPreviousTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_STREAM_PREVIOUS_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchScanBackward = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_STREAM_SCAN_BACKWARD,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchScanForward = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_STREAM_SCAN_FORWARD,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\nexport {\n  fetchStream,\n  fetchNextTrack,\n  fetchPauseTrack,\n  fetchPlayTrack,\n  fetchPreviousTrack,\n  fetchScanBackward,\n  fetchScanForward,\n}\n","import { useState } from \"react\";\nimport { connect } from 'react-redux'\n// import { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport styles from './Player.module.css';\nimport { fetchListQueues } from '../Queue/network'\nimport {\n  fetchNextTrack,\n  fetchPauseTrack,\n  fetchPlayTrack,\n  fetchPreviousTrack,\n  fetchScanBackward,\n  fetchScanForward,\n} from './network'\nimport { fetchTextComments, fetchVoiceRecordings } from '../Chat/network'\n\n\nfunction Player(props) {\n\n  /*\n   * 🏗\n   */\n  const stream = props.stream,\n        playback = props.playback,\n        track = stream?.nowPlaying?.track,\n        nextUp = props.nextUp,\n        lastUp = props.lastUp;\n\n  const [key, setKey] = useState(0);\n\n\n  /*\n   *\n   */\n  const updateFeed = async function() {\n    // load comments\n    const textCommentsJsonResponse = await fetchTextComments();\n    await props.dispatch({\n      type: 'textComment/listSet',\n      textComments: textCommentsJsonResponse.data,\n    });\n\n    // load voice recordings\n    const voiceRecordingsJsonResponse = await fetchVoiceRecordings();\n    await props.dispatch({\n      type: 'voiceRecording/listSet',\n      voiceRecordings: voiceRecordingsJsonResponse.data,\n    });\n  }\n\n  /*\n   * When...\n   */\n  const handlePrevTrack = async function(e) {\n    e.preventDefault();\n\n    const responseJson = await fetchPreviousTrack();\n\n    const jsonResponse = await fetchListQueues();\n    const { nextUpQueues, lastUpQueues } = jsonResponse.data;\n\n    await props.dispatch({\n      type: 'stream/prevTrack',\n      startedAt: responseJson.data.startedAt,\n    });\n\n    await props.dispatch({\n      type: 'queue/listSet',\n      lastUpQueues: lastUpQueues,\n      nextUpQueues: nextUpQueues,\n    });\n\n    await updateFeed();\n  }\n\n  /*\n   * When...\n   */\n  const handleNextTrack = async function(e) {\n    if(e) {\n      e.preventDefault();\n    }\n\n    const responseJson = await fetchNextTrack();\n\n    const jsonResponse = await fetchListQueues();\n    const { nextUpQueues, lastUpQueues } = jsonResponse.data;\n\n    await props.dispatch({\n      type: 'stream/nextTrack',\n      startedAt: responseJson.data.startedAt,\n    });\n\n    await props.dispatch({\n      type: 'queue/listSet',\n      lastUpQueues: lastUpQueues,\n      nextUpQueues: nextUpQueues,\n    });\n\n    await updateFeed();\n  }\n\n  /*\n   * When...\n   */\n  const handlePlayTrack = async function(e) {\n    e.preventDefault();\n\n    const jsonResponse = await fetchPlayTrack();\n    props.dispatch({\n      type: 'stream/set',\n      stream: {\n        ...stream,\n        isPlaying: true,\n        isPaused: false,\n        playedAt: jsonResponse.data.playedAt,\n      },\n    });\n  }\n\n  /*\n   * When...\n   */\n  const handlePauseTrack = async function(e) {\n    e.preventDefault();\n\n    const jsonResponse = await fetchPauseTrack();\n\n    props.dispatch({\n      type: 'stream/set',\n      stream: {\n        ...stream,\n        isPlaying: false,\n        isPaused: true,\n        pausedAt: jsonResponse.data.pausedAt,\n      },\n    });\n  }\n\n  /*\n   * When...\n   */\n  const handleScanBackward = async function(e) {\n    e.preventDefault();\n\n    await fetchScanBackward();\n\n    const date = new Date();\n    const epochNow = date.getTime();\n\n    const proposedStartedAt = stream.startedAt + 10000;\n    const proposedProgress = epochNow - proposedStartedAt;\n    const startedAt = proposedProgress > 0 ? proposedStartedAt : epochNow;\n\n    console.log(stream.startedAt, startedAt)\n    console.log(stream.startedAt - startedAt)\n\n    await props.dispatch({\n      type: 'stream/set',\n      stream: { ...stream, startedAt: startedAt },\n    });\n    setKey(key + 1);\n  }\n\n  /*\n   * When...\n   */\n  const handleScanForward = async function(e) {\n    e.preventDefault();\n\n    const response = await fetchScanForward();\n\n    if(response.system.status === 400) {\n      return;\n    }\n\n    await props.dispatch({\n      type: 'stream/set',\n      stream: { ...stream, startedAt: stream.startedAt - (10000) },\n    });\n    setKey(key + 1);\n  }\n\n  if(stream?.isPlaying && !playback.nowPlaying) {\n    props.dispatch({ type: 'playback/play' });\n  }\n\n  /*\n   * When...\n   */\n  // const handleIdle = async function() {\n  //   await props.dispatch({\n  //     type: \"stream/expire\",\n  //   });\n  //\n  //   await props.dispatch({\n  //     type: \"queue/listSet\",\n  //     lastUpQueues: props.lastUpQueues,\n  //     nextUpQueues: props.nextUpQueues,\n  //   });\n  // }\n\n  // const progress = (\n  //   stream ?\n  //   (\n  //     stream.pausedAt ?\n  //       stream.pausedAt - stream.startedAt:\n  //       Date.now() - stream.startedAt\n  //   ) :\n  //   undefined\n  // );\n  // const trackDuration = stream?.nowPlaying?.track?.durationMilliseconds;\n\n  return (\n    <>\n      <div className={styles.Div}>\n        <p><i>Last...</i></p>\n        <p>{lastUp?.track?.name}</p>\n      </div>\n\n      <div className={styles.Div}>\n        <p><i>Now playing...</i></p>\n        {(stream?.isPlaying || stream?.isPaused) &&\n          <p>{track?.name}</p>\n        }\n        {(!stream?.isPlaying && !stream?.isPaused) &&\n          <p>Waiting...</p>\n        }\n      </div>\n\n      <div className={styles.Div}>\n        <p><i>Next...</i></p>\n        <p>{nextUp?.track.name}</p>\n      </div>\n\n      <div className={styles.Div}>\n        <button className={styles.Button} onClick={handlePrevTrack}>Prev</button>\n        {stream?.isPaused &&\n          <button className={styles.Button} onClick={handlePlayTrack}>Play</button>\n        }\n        {stream?.isPlaying &&\n          <button className={styles.Button} onClick={handlePauseTrack}>Pause</button>\n        }\n        <button className={styles.Button} onClick={handleNextTrack}>Next</button>\n      </div>\n      <div className={styles.Div}>\n        {(stream?.isPlaying) &&\n          <button className={styles.Button} onClick={handleScanBackward}>Backward</button>\n        }\n        {(stream?.isPlaying) &&\n          <button className={styles.Button} onClick={handleScanForward}>Forward</button>\n        }\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n    stream: state.stream,\n    playback: state.playback,\n    lastUp: state.lastUp,\n    lastUpQueues: state.lastUpQueues,\n    nextUp: state.nextUp,\n    nextUpQueues: state.nextUpQueues,\n});\n\nexport default connect(mapStateToProps)(Player);\n","import React from \"react\";\nimport { connect } from 'react-redux';\n\nfunction UserSettings(props) {\n  if (!props.userSettings) {\n    return <></>;\n  }\n\n  return (\n    <a href={props.userSettings.spotify.authorizationUrl}>Connect Your Spotify Account</a>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  userSettings: state.userSettings,\n});\n\nexport default connect(mapStateToProps)(UserSettings);\n","import {\n  ENDPOINT_USER_GET_SETTINGS\n} from '../../config/api'\nimport { TYPE_GET } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an user settings from the server.\n */\nexport const fetchGetUserSettings = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_USER_GET_SETTINGS,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n","import './App.css';\nimport Chat from './components/Chat/Chat'\nimport Login from './components/Login/Login'\nimport Queue from './components/Queue/Queue'\nimport Search from './components/Search/Search'\nimport Upload from './components/Upload/Upload'\nimport Player from './components/Player/Player'\nimport UserSettings from './components/UserSettings/UserSettings'\nimport { fetchTextComments, fetchVoiceRecordings } from './components/Chat/network'\nimport { fetchVerifyToken } from './components/Login/network'\nimport { fetchStream } from './components/Player/network'\nimport { fetchListQueues } from './components/Queue/network'\nimport { fetchGetUserSettings } from './components/UserSettings/network'\nimport { store } from './utils/redux'\n\nimport { useEffect, useState } from \"react\";\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  // keeps track of the status of the webpage\n  //  - initial: when the page is first loaded\n  //  - unauthenticated: the client does NOT have a valid access token\n  //  - authenticated: the client has a valid access token\n  //  - ready: all API data has been loaded\n  const [status, setStatus] = useState('initial');\n\n  // componentDidMount\n  useEffect(() => {\n    async function loadData() {\n\n      // verify authentication\n      const authResponse = await fetchVerifyToken();\n        if (!authResponse) {\n          setStatus('unauthenticated');\n          return;\n        }\n        console.log(authResponse);\n\n      // set state\n      setStatus('authenticated');\n\n      // load stream\n      const streamJsonResponse = await fetchStream();\n      const stream = streamJsonResponse.data;\n\n      await store.dispatch({\n        type: 'stream/set',\n        stream: stream,\n      });\n\n      // load queue\n      const queueJsonResponse = await fetchListQueues();\n      const { nextUpQueues, lastUpQueues } = queueJsonResponse.data;\n\n      await store.dispatch({\n        type: 'queue/listSet',\n        lastUpQueues: lastUpQueues,\n        nextUpQueues: nextUpQueues,\n      });\n\n      // load comments\n      const textCommentsJsonResponse = await fetchTextComments();\n      await store.dispatch({\n        type: 'textComment/listSet',\n        textComments: textCommentsJsonResponse.data,\n      });\n\n      // load voice recordings\n      const voiceRecordingsJsonResponse = await fetchVoiceRecordings();\n      await store.dispatch({\n        type: 'voiceRecording/listSet',\n        voiceRecordings: voiceRecordingsJsonResponse.data,\n      });\n\n      // get user settings\n      const userSettingsJsonResponse = await fetchGetUserSettings();\n      await store.dispatch({\n        type: 'user/get-settings',\n        userSettings: userSettingsJsonResponse.data,\n      });\n\n      setStatus('ready');\n    }\n    loadData();\n  }, []);\n\n  // as the page is loading, display nothing\n  if(status === 'initial') {\n    return (\n      <Router>\n        <Provider store={store}>\n          <></>\n        </Provider>\n      </Router>\n    );\n  }\n\n  // if the user is not authenticated, only display the login portal\n  if(status === 'unauthenticated') {\n    return (\n      <Router>\n        <Provider store={store}>\n          <div className=\"app-main-container\">\n            <div className=\"app-main\">\n              <Login />\n            </div>\n          </div>\n        </Provider>\n      </Router>\n    )\n  }\n\n  // if the user is not authenticated, only display the login portal\n  if(status === 'authenticated') {\n    return (\n      <Router>\n        <Provider store={store}>\n          Loading...\n        </Provider>\n      </Router>\n    )\n  }\n\n  // display the main UI now that everything is loaded up\n  return (\n    <Router>\n      <Provider store={store}>\n\n        {/* nav bar */}\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/settings\">Settings</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            <li>\n              <Link to=\"/player\">Player</Link>\n            </li>\n            <li>\n              <Link to=\"/queue\">Queue</Link>\n            </li>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n            <li>\n              <Link to=\"/upload\">Upload</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* main section */}\n        <div className=\"app-main-container\">\n          <div className=\"app-main\">\n            <Switch>\n              <Route path=\"/settings\">\n                <UserSettings />\n              </Route>\n              <Route path=\"/chat\">\n                <Chat />\n              </Route>\n              <Route path=\"/player\">\n                <Player />\n              </Route>\n              <Route path=\"/queue\">\n                <Queue />\n              </Route>\n              <Route path=\"/search\">\n                <Search />\n              </Route>\n              <Route path=\"/upload\">\n                <Upload />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}