{"version":3,"sources":["components/Upload/Upload.module.css","components/Login/Login.module.css","components/Search/Search.module.css","components/Chat/Chat.module.css","components/NotableText/NotableText.module.css","components/TextComment/TextComment.module.css","components/VoiceRecording/VoiceRecording.module.css","components/Queue/Queue.module.css","components/QueueItem/QueueItem.module.css","config/global.js","utils/network.js","components/Chat/network.js","config/api.js","components/TextComment/network.js","components/VoiceRecording/network.js","components/NotableText/network.js","components/NotableText/NotableText.js","components/TextComment/TextComment.js","components/VoiceRecording/VoiceRecording.js","components/Chat/Chat.js","config/model.js","components/Login/network.js","components/Login/Login.js","components/Queue/network.js","components/QueueItem/QueueItem.js","components/Queue/Queue.js","components/Search/network.js","components/SearchResult/SearchResult.js","components/Search/Search.js","components/Upload/network.js","components/Upload/Upload.js","components/Player/network.js","components/Player/Player.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BACKEND_DOMAIN","TYPE_GET","TYPE_POST","fetchBackend","a","method","url","data","formData","FormData","Object","entries","key","value","append","requestOptions","headers","token","localStorage","getItem","Authorization","request","Request","fetch","mode","body","response","searchParams","URLSearchParams","set","getUrl","toString","fetchCreateTextComment","text","json","responseJson","fetchTextComments","fetchVoiceRecordings","fetchDeleteTextComment","textCommentUuid","fetchListDeleteTextCommentModifications","fetchDeleteVoiceRecording","voiceRecordingUuid","fetchCreateTextCommentModification","style","anchorOffset","focusOffset","STYLE_CHOICES","NotableText","props","selectableRef","useRef","useState","selectableIsShowable","setSelectableIsShowable","setAnchorOffset","setFocusOffset","handleNotation","e","preventDefault","uuid","create","onTextSelect","selection","window","getSelection","anchorNode","focusNode","offset","parseInt","parentNode","getAttribute","onTextUnselect","updateZIndex","annotation","_svg","zIndex","className","styles","ref","textComment","textCommentText","modifications","startOffset","textCommentHtml","i","length","modification","regSubString","substring","startPtr","styledSubString","endPtr","Notated","show","multiline","color","type","animate","getAnnotationObject","renderTextComment","selectionRef","isOpen","map","index","onSubmit","TextComment","onClick","destroyModifications","destroy","VoiceRecording","handleDelete","voiceRecording","transcriptFinal","Chat","undefined","_textComments","_setTextComments","_voiceRecordings","_setVoiceRecordings","setText","useEffect","textCommentsResponse","system","status","voiceRecordingsResponse","loadData","feed","destroyFeedItem","voiceRecordings","filteredTextComments","filter","filteredVoiceRecordings","destroyTextCommentModifications","textCommentIndex","findIndex","t","destroyTextComment","destroyVoiceRecording","createTextComment","push","createTextCommentModification","textCommentModification","sortedModifications","sort","b","Array","isArray","timestampMilliseconds","class","CreateTextComment","name","placeholder","onChange","target","fetchAuthToken","username","password","Login","state","errorMessage","rememberMe","handleChange","bind","handleSubmit","event","obj","this","setState","access","refresh","setItem","to","FormBlock","React","Component","defaultProps","fetchListQueues","fetchDeleteQueue","queueUuid","QueueItem","reveal","toggleReveal","queue","indent","repeat","depth","isDeleted","trackName","collectionName","destroyChild","parentQueueUuid","children","Queue","queues","destroyQueueItem","destroyChildQueueItem","jsonResponse","message","lastQueueUuid","filteredQueues","childQueueUuid","queuesCopy","parentIndex","filteredChildren","fetchSearchMusicLibrary","query","providerSpotify","providerYouTube","providerJukeboxRadio","formatTrack","formatAlbum","formatPlaylist","formatVideo","fetchCreateQueue","genericUuid","prevQueueUuid","nextQueueUuid","SearchResult","searchResult","provider","format","addToQueue","Search","searchResults","spotify","youTube","jukeboxRadio","track","album","playlist","video","handleCheckboxChange","split","key0","key1","val","checked","fetchCreateTrack","audioFile","imageFile","artistName","albumName","Upload","handleFileChange","files","fetchStream","fetchNextTrack","fetchPauseTrack","fetchPlayTrack","fetchPreviousTrack","fetchScanBackward","fetchScanForward","Player","progress","_nextTrackScheduledAt","stream","getStream","animateProgressBar","handlePrevTrack","handleNextTrack","handlePlayTrack","handlePauseTrack","handleScanBackward","handleScanForward","loop","nowPlaying","isPlaying","isPaused","Date","getTime","playedAt","durationMilliseconds","requestAnimationFrame","pausedAt","date","epochNow","proposedPlayedAt","Math","floor","max","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bc1bf48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Upload\":\"Upload_Upload__tMDig\",\"FormBlock\":\"Upload_FormBlock__2ls6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1ujut\",\"FormBlock\":\"Login_FormBlock__S_rix\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"FormBlock\":\"Search_FormBlock__3ZZZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__3NjUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotableText\":\"NotableText_NotableText__1_8Yx\",\"Notated\":\"NotableText_Notated__1OpEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextComment\":\"TextComment_TextComment__15QHu\",\"Notated\":\"TextComment_Notated__24bZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VoiceRecording\":\"VoiceRecording_VoiceRecording__10J4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Queue\":\"Queue_Queue__YTCBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueueItem\":\"QueueItem_QueueItem__e3nEn\"};","const BACKEND_DOMAIN = 'http://localhost:3000';\nconst TYPE_GET = 'GET';\nconst TYPE_POST = 'POST';\n\nexport { BACKEND_DOMAIN, TYPE_GET, TYPE_POST }\n","import { BACKEND_DOMAIN } from '../config/global'\n\n\nasync function fetchBackend(method = '', url = '', data = {}) {\n  let response;\n\n  url = BACKEND_DOMAIN + url;\n\n  if(method !== 'GET') {\n\n    // aggregate form data in one place\n    const formData = new FormData();\n    for (const [key, value] of Object.entries(data)) {\n      formData.append(key, value);\n    }\n    // for (const [key, value] of Object.entries(files)) {\n    //   formData.append(key, value);\n    // }\n\n    // authenticate request if possible\n    let requestOptions = {headers: {}}\n    const token = localStorage.getItem('accessToken');\n    if(token) {\n      requestOptions.headers.Authorization = `Bearer ${token}`;\n    }\n    const request = new Request(url, requestOptions);\n\n    // make the request\n    response = await fetch(request, {\n      method: method,\n      mode: 'cors',\n      body: formData,\n    });\n  } else {\n\n    // translate form data for GET\n    let searchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(data)) {\n      searchParams.set(key, value);\n    }\n    const getUrl = url + '/?' + searchParams.toString();\n\n    // authenticate request if possible\n    let requestOptions = {headers: {'Content-Type': 'application/json'}}\n    const token = localStorage.getItem('accessToken');\n    if(token) {\n      requestOptions.headers.Authorization = `Bearer ${token}`;\n    }\n    const request = new Request(getUrl, requestOptions);\n\n    // make the request\n    response = await fetch(request, {\n      method: method,\n      mode: 'cors',\n    });\n  }\n\n  return response;\n}\n\nexport { fetchBackend }\n","import {\n  ENDPOINT_CREATE_TEXT_COMMENT,\n  ENDPOINT_LIST_TEXT_COMMENTS,\n  ENDPOINT_LIST_VOICE_RECORDINGS\n} from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nconst fetchCreateTextComment = async (text) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_TEXT_COMMENT,\n    {text: text},\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchTextComments = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_LIST_TEXT_COMMENTS\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchVoiceRecordings = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_LIST_VOICE_RECORDINGS\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\nexport { fetchCreateTextComment, fetchTextComments, fetchVoiceRecordings }\n","const ENDPOINT_OBTAIN_AUTH_TOKEN = '/auth/obtain-tokens/'\nconst ENDPOINT_REFRESH_AUTH_TOKEN = '/auth/refresh-token/'\nconst ENDPOINT_VERIFY_TOKEN = '/auth/verify-token/'\n\nconst ENDPOINT_CREATE_TEXT_COMMENT = '/comments/text-comment/create/'\nconst ENDPOINT_LIST_TEXT_COMMENTS = '/comments/text-comment/list'\nconst ENDPOINT_UPDATE_TEXT_COMMENT = '/comments/text-comment/update/'\nconst ENDPOINT_DELETE_TEXT_COMMENT = '/comments/text-comment/delete/'\n\nconst ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION = '/comments/text-comment-modification/create/'\nconst ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS = '/comments/text-comment-modification/list-delete/'\n\nconst ENDPOINT_LIST_VOICE_RECORDINGS = '/comments/voice-recording/list'\nconst ENDPOINT_DELETE_VOICE_RECORDING = '/comments/voice-recording/delete/'\n\nconst ENDPOINT_LIST_QUEUES = '/streams/queue/list'\nconst ENDPOINT_DELETE_QUEUE = '/streams/queue/delete/'\n\nconst ENDPOINT_CREATE_TRACK = '/music/track/create/'\nconst ENDPOINT_SEARCH_MUSIC = '/music/search'\n\nconst ENDPOINT_CREATE_QUEUE = '/streams/queue/create/'\n\nconst ENDPOINT_GET_STREAM = '/streams/stream/get'\nconst ENDPOINT_NEXT_TRACK = '/streams/stream/next-track/'\nconst ENDPOINT_PAUSE_TRACK = '/streams/stream/pause-track/'\nconst ENDPOINT_PLAY_TRACK = '/streams/stream/play-track/'\nconst ENDPOINT_PREVIOUS_TRACK = '/streams/stream/previous-track/'\nconst ENDPOINT_SCAN_BACKWARD = '/streams/stream/scan-backward/'\nconst ENDPOINT_SCAN_FORWARD = '/streams/stream/scan-forward/'\n\nexport {\n  ENDPOINT_OBTAIN_AUTH_TOKEN,\n  ENDPOINT_REFRESH_AUTH_TOKEN,\n  ENDPOINT_VERIFY_TOKEN,\n\n  ENDPOINT_CREATE_TEXT_COMMENT,\n  ENDPOINT_LIST_TEXT_COMMENTS,\n  ENDPOINT_UPDATE_TEXT_COMMENT,\n  ENDPOINT_DELETE_TEXT_COMMENT,\n\n  ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION,\n  ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS,\n\n  ENDPOINT_LIST_VOICE_RECORDINGS,\n  ENDPOINT_DELETE_VOICE_RECORDING,\n\n  ENDPOINT_LIST_QUEUES,\n  ENDPOINT_DELETE_QUEUE,\n\n  ENDPOINT_CREATE_TRACK,\n  ENDPOINT_SEARCH_MUSIC,\n\n  ENDPOINT_CREATE_QUEUE,\n\n  ENDPOINT_GET_STREAM,\n  ENDPOINT_NEXT_TRACK,\n  ENDPOINT_PAUSE_TRACK,\n  ENDPOINT_PLAY_TRACK,\n  ENDPOINT_PREVIOUS_TRACK,\n  ENDPOINT_SCAN_BACKWARD,\n  ENDPOINT_SCAN_FORWARD,\n}\n","import {\n  ENDPOINT_DELETE_TEXT_COMMENT,\n  ENDPOINT_UPDATE_TEXT_COMMENT,\n  ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS,\n} from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nexport const fetchDeleteTextComment = async (textCommentUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_DELETE_TEXT_COMMENT,\n    { textCommentUuid: textCommentUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchUpdateTextComment = async (textCommentUuid, text) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_UPDATE_TEXT_COMMENT,\n    { textCommentUuid: textCommentUuid, text: text },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches...\n */\nexport const fetchListDeleteTextCommentModifications = async (textCommentUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_LIST_DELETE_TEXT_COMMENT_MODIFICATIONS,\n    { textCommentUuid: textCommentUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import { ENDPOINT_DELETE_VOICE_RECORDING } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchDeleteVoiceRecording = async (voiceRecordingUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_DELETE_VOICE_RECORDING,\n    { voiceRecordingUuid: voiceRecordingUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import {\n  ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION,\n} from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nexport const fetchCreateTextCommentModification = async (textCommentUuid, style, anchorOffset, focusOffset) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_TEXT_COMMENT_MODIFICATION,\n    {\n      textCommentUuid: textCommentUuid,\n      style: style,\n      anchorOffset: anchorOffset,\n      focusOffset: focusOffset,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\nexport const STYLE_UNDERLINE = 'underline';\nexport const STYLE_BOX = 'box';\nexport const STYLE_CIRCLE = 'circle';\nexport const STYLE_HIGHLIGHT = 'highlight';\nexport const STYLE_STRIKE_THROUGH = 'strike-through';\nexport const STYLE_CROSSED_OFF = 'crossed-off';\nexport const STYLE_BRACKET = 'bracket';\n\nexport const STYLE_CHOICES = [\n  STYLE_UNDERLINE,\n  STYLE_BOX,\n  STYLE_CIRCLE,\n  STYLE_HIGHLIGHT,\n  STYLE_STRIKE_THROUGH,\n  STYLE_CROSSED_OFF,\n  STYLE_BRACKET,\n];\n","import React, { useRef, useState } from \"react\";\nimport Popover from 'react-text-selection-popover';\nimport { RoughNotation } from \"react-rough-notation\";\nimport styles from './NotableText.module.css';\nimport {\n  fetchCreateTextCommentModification,\n  STYLE_CHOICES,\n} from './network';\n\n\nfunction NotableText(props) {\n\n  /*\n   * 🏗\n   */\n  const selectableRef = useRef(null);\n\n  const [selectableIsShowable, setSelectableIsShowable] = useState(true);\n  const [anchorOffset, setAnchorOffset] = useState(null);\n  const [focusOffset, setFocusOffset] = useState(null);\n\n  /*\n   * When the user highlights part of the comment.\n   */\n  const handleNotation = async function(e, style) {\n    e.preventDefault();\n    const textCommentUuid = props.data.uuid;\n    const responseJson = await fetchCreateTextCommentModification(\n      textCommentUuid,\n      style,\n      anchorOffset,\n      focusOffset,\n    );\n    props.create(textCommentUuid, responseJson.data);\n    setSelectableIsShowable(false);\n  }\n\n  /*\n   * ...\n   */\n  const onTextSelect = async function() {\n    const selection = window.getSelection();\n\n    // Invalid text selection\n    if(selection.anchorNode !== selection.focusNode) {\n      setSelectableIsShowable(false);\n      setAnchorOffset(null);\n      setFocusOffset(null);\n      return;\n    }\n\n    // NOTE: anchor is where the user starts selecting text, focus is the end\n    //       of the selection.\n    const offset = parseInt(selection.anchorNode.parentNode.getAttribute('offset'));\n    setSelectableIsShowable(true);\n    setAnchorOffset(offset + selection.anchorOffset);\n    setFocusOffset(offset + selection.focusOffset);\n  }\n\n  /*\n   * ...\n   */\n  const onTextUnselect = async function() {\n    setSelectableIsShowable(false);\n    setAnchorOffset(null);\n    setFocusOffset(null);\n  }\n\n  /*\n   * Monkey patch Rough Notation so that the markup is displayed behind\n   * neighboring text.\n   */\n  const updateZIndex = function(annotation) {\n    annotation._svg.style.zIndex = -1;\n  }\n\n  /*\n   * When rendering a text comment, the text has to be displayed along with all\n   * of its annotations. Here the comment string is spliced into many\n   * substrings. If a substring has an accompanying modification, then Rough\n   * Notation is used to display the underline, strike-through, or highlight.\n   */\n  const renderTextComment = function() {\n    const textComment = props.data;\n    const textCommentText = textComment.text;\n    const modifications = textComment.modifications;\n\n    let startOffset = 0,\n        textCommentHtml = <></>;\n    for(let i = 0; i < modifications.length; i++) {\n        let modification = modifications[i];\n\n        const regSubString = textCommentText.substring(\n          startOffset,\n          modification.startPtr\n        )\n        const styledSubString = textCommentText.substring(\n          modification.startPtr,\n          modification.endPtr\n        )\n\n        textCommentHtml = (\n          <>\n            {textCommentHtml}\n            <span offset={startOffset}>{regSubString}</span>\n            <RoughNotation className={styles.Notated}\n                           show={true}\n                           multiline={true}\n                           color=\"red\"\n                           type={modification.type}\n                           animate={modification.animate}\n                           getAnnotationObject={updateZIndex}>\n              {styledSubString}\n            </RoughNotation>\n          </>\n        )\n\n        startOffset = modification.endPtr;\n    }\n\n    const regSubString = textCommentText.substring(\n      startOffset,\n      textCommentText.length\n    )\n\n    textCommentHtml = (\n      <>\n        {textCommentHtml}\n        <span offset={startOffset}>{regSubString}</span>\n      </>\n    )\n\n    return textCommentHtml;\n  }\n\n  /*\n   * 🎨\n   */\n  return (\n    <div className={styles.NotableText}>\n\n      <p ref={selectableRef}>\n        {renderTextComment()}\n      </p>\n      <Popover selectionRef={selectableRef} onTextSelect={onTextSelect} onTextUnselect={onTextUnselect} isOpen={selectableIsShowable}>\n        {STYLE_CHOICES.map((style, index) => {\n          return (\n            <form key={index} onSubmit={async (e) => { await handleNotation(e, style); }}>\n              <button type=\"submit\">\n                {index}\n              </button>\n            </form>\n          );\n        })}\n      </Popover>\n\n    </div>\n  );\n\n}\n\nexport default NotableText;\n","import React from \"react\";\nimport NotableText from '../NotableText/NotableText'\nimport styles from './TextComment.module.css';\n\n\nfunction TextComment(props) {\n\n  /*\n   * 🎨\n   */\n  return (\n    <div className={styles.TextComment}>\n      <NotableText data={props.data} create={props.create}></NotableText>\n\n      <button type=\"button\" onClick={async (e) => { await props.destroyModifications(props.data.uuid); }}>\n        Clear modifications\n      </button>\n\n      <button type=\"button\" onClick={async (e) => { await props.destroy(props.data.uuid); }}>\n        Delete\n      </button>\n    </div>\n  );\n\n}\n\nexport default TextComment;\n","import React from \"react\";\nimport styles from './VoiceRecording.module.css';\nimport { fetchDeleteVoiceRecording } from './network';\n\n\nfunction VoiceRecording(props) {\n\n  /*\n   * When the user deletes a text comment.\n   */\n  const handleDelete = async function(e) {\n    e.preventDefault();\n    const voiceRecordingUuid = props.data.uuid;\n    await fetchDeleteVoiceRecording(voiceRecordingUuid);\n    await props.destroy(voiceRecordingUuid);\n  }\n\n  /*\n   * 🎨\n   */\n  const voiceRecording = props.data;\n  return (\n    <div className={styles.VoiceRecording}>\n      <p><i>\n        {\n          voiceRecording.transcriptFinal === 'null' ?\n          '<transcript not available>' : voiceRecording.transcriptFinal\n        }\n      </i></p>\n      <form onSubmit={async (e) => { await handleDelete(e); }}>\n        <button type=\"submit\">\n          Delete\n        </button>\n      </form>\n    </div>\n  );\n\n}\n\nexport default VoiceRecording;\n","import React, { useState, useEffect } from \"react\";\nimport styles from './Chat.module.css';\nimport { fetchCreateTextComment, fetchTextComments, fetchVoiceRecordings } from './network'\nimport {\n  fetchDeleteTextComment,\n  fetchListDeleteTextCommentModifications,\n} from '../TextComment/network'\nimport {\n  fetchDeleteVoiceRecording,\n} from '../VoiceRecording/network'\nimport TextComment from '../TextComment/TextComment'\nimport VoiceRecording from '../VoiceRecording/VoiceRecording'\nimport {\n  CLASS_TEXT_COMMENT,\n  CLASS_VOICE_RECORDING\n} from '../../config/model'\n\n\nfunction Chat(props) {\n\n  /*\n   * 🏗\n   */\n  const [_textComments, _setTextComments] = useState(undefined);\n  const [_voiceRecordings, _setVoiceRecordings] = useState(undefined);\n  const [text, setText] = useState('');\n\n  // onComponentDidMount\n  useEffect(() => {\n    async function loadData() {\n      const textCommentsResponse = await fetchTextComments();\n      if(textCommentsResponse.system.status === 200) {\n        _setTextComments(textCommentsResponse.data);\n      }\n\n      const voiceRecordingsResponse = await fetchVoiceRecordings();\n      if(voiceRecordingsResponse.system.status === 200) {\n        _setVoiceRecordings(voiceRecordingsResponse.data);\n      }\n    }\n    loadData();\n  }, [])\n\n  /*\n   * Called inside a child component, this deletes the data (either a text\n   * comment or voice recording) from the state, thereby updating the UI.\n   */\n  const destroyFeedItem = async function(uuid) {\n    const textComments = _textComments,\n          voiceRecordings = _voiceRecordings;\n\n    const filteredTextComments = textComments.filter(i => i.uuid !== uuid),\n          filteredVoiceRecordings = voiceRecordings.filter(i => i.uuid !== uuid);\n\n    _setTextComments(filteredTextComments);\n    _setVoiceRecordings(filteredVoiceRecordings);\n  }\n\n  /*\n   * ...\n   */\n  const destroyTextCommentModifications = async function(textCommentUuid) {\n    await fetchListDeleteTextCommentModifications(textCommentUuid);\n\n    const textCommentIndex = _textComments.findIndex(t => t.uuid === textCommentUuid)\n\n    _textComments[textCommentIndex].modifications = [];\n    _setTextComments([..._textComments]);\n  }\n\n  /*\n   * ...\n   */\n  const destroyTextComment = async function(textCommentUuid) {\n    await fetchListDeleteTextCommentModifications(textCommentUuid);\n    await fetchDeleteTextComment(textCommentUuid);\n    await destroyFeedItem(textCommentUuid);\n  }\n\n  /*\n   * ...\n   */\n  const destroyVoiceRecording = async function(voiceRecordingUuid) {\n    await fetchDeleteVoiceRecording(voiceRecordingUuid);\n    await destroyFeedItem(voiceRecordingUuid);\n  }\n\n  /*\n   * When a user submits a new comment.\n   */\n  const createTextComment = async function(e) {\n    e.preventDefault();\n    const responseJson = await fetchCreateTextComment(text);\n\n    _textComments.push(responseJson.data);\n    _setTextComments([..._textComments]);\n    setText('');\n  }\n\n  /*\n   * Called by a child component when the user creates a text comment\n   * modification.\n   */\n  const createTextCommentModification = async function(textCommentUuid, textCommentModification) {\n    const textCommentIndex = _textComments.findIndex(t => t.uuid === textCommentUuid);\n    const modifications = _textComments[textCommentIndex].modifications;\n\n    modifications.push(textCommentModification);\n    const sortedModifications = modifications.sort((a, b) => {\n      return a.startPtr - b.startPtr;\n    });\n\n    _textComments[textCommentIndex].modifications = sortedModifications;\n    _setTextComments([..._textComments]);\n  }\n\n  /*\n   * This aggregates text comments and voice recordings into one data list,\n   * sorted by track timestamp.\n   */\n  let feed;\n\n  if(!Array.isArray(_textComments) || !Array.isArray(_voiceRecordings)) {\n    feed = [];\n  } else {\n    const aggregateFeed = [..._textComments, ..._voiceRecordings];\n    feed = aggregateFeed.sort((a, b) => {\n      return a.timestampMilliseconds - b.timestampMilliseconds;\n    });\n  }\n\n\n  /*\n   * 🎨\n   */\n  return (\n    <div>\n      <div className={styles.Chat}>\n        {feed.map((value, index) => {\n          if(value.class === CLASS_TEXT_COMMENT) {\n            return <TextComment key={index} data={value} destroy={destroyTextComment} destroyModifications={destroyTextCommentModifications} create={createTextCommentModification} />\n          } else if(value.class === CLASS_VOICE_RECORDING) {\n            return <VoiceRecording key={index} data={value} destroy={destroyVoiceRecording} />\n          } else {\n            return null;\n          }\n        })}\n      </div>\n      <form className={styles.CreateTextComment} onSubmit={async (e) => { await createTextComment(e); }}>\n\n        <input type=\"text\"\n               name=\"text\"\n               placeholder=\"text\"\n               value={text}\n               onChange={(e) => { setText(e.target.value); }} />\n\n        <button type=\"submit\">\n          Send\n        </button>\n\n      </form>\n    </div>\n  );\n\n}\n\n\nexport default Chat;\n","const CLASS_TEXT_COMMENT = 'TextComment'\nconst CLASS_VOICE_RECORDING = 'VoiceRecording'\n\nexport { CLASS_TEXT_COMMENT, CLASS_VOICE_RECORDING }\n","import { ENDPOINT_OBTAIN_AUTH_TOKEN } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchAuthToken = async (username, password) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_OBTAIN_AUTH_TOKEN,\n    { username: username, password: password },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styles from './Login.module.css';\n\nimport { fetchAuthToken } from './network';\n\n\nclass Login extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      // Form\n      username: '',\n      password: '',\n      rememberMe: false,\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  async handleSubmit(event) {\n    event.preventDefault();\n    const responseJson = await fetchAuthToken(this.state.username, this.state.password);\n    if(!responseJson.access || !responseJson.refresh) {\n      return;\n    }\n    localStorage.setItem('accessToken', responseJson.access);\n    localStorage.setItem('refreshToken', responseJson.refresh);\n  }\n\n  render() {\n    return (\n      <form className={styles.Login} onSubmit={async (e) => { await this.handleSubmit(e); }}>\n        <h3>Sign in</h3>\n        <p>If you have not created an account yet, then please <Link to=\"/signup\">Sign Up</Link> first.</p>\n\n        <label className={styles.FormBlock}>\n          Username\n          <input type=\"text\"\n                 name=\"username\"\n                 placeholder=\"username\"\n                 value={this.state.username}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Password\n          <input type=\"password\"\n                 name=\"password\"\n                 placeholder=\"password\"\n                 value={this.state.password}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          <input type=\"checkbox\"\n                 name=\"remember-me\"\n                 value={this.state.rememberMe}\n                 onChange={this.handleChange} />\n          Remember Me\n        </label>\n\n        <div className={styles.FormBlock}>\n          <button type=\"submit\">\n            Sign In\n          </button>\n          <span><Link to=\"/forgotpassword\">Forgot Password?</Link></span>\n        </div>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {};\n\nLogin.defaultProps = {};\n\nexport default Login;\n","import { ENDPOINT_LIST_QUEUES, ENDPOINT_DELETE_QUEUE } from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches...\n */\nexport const fetchListQueues = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_LIST_QUEUES,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nexport const fetchDeleteQueue = async (queueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_DELETE_QUEUE,\n    { queueUuid: queueUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\nimport styles from './QueueItem.module.css';\n\n\nclass QueueItem extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      reveal: false,\n    }\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleDelete = this.handleDelete.bind(this);\n    this.toggleReveal = this.toggleReveal.bind(this);\n  }\n\n  /*\n   * When the user deletes a text comment.\n   */\n  async handleDelete(event) {\n    event.preventDefault();\n    const queueUuid = this.props.data.uuid;\n    await this.props.destroy(queueUuid);\n  }\n\n  /*\n   * When...\n   */\n  toggleReveal(event) {\n    this.setState({ reveal: !this.state.reveal });\n  }\n\n  /*\n   * 🎨\n   */\n  render() {\n    const queue = this.props.data;\n    const indent = '-'.repeat(queue.depth) + ' ';\n    return (\n      <div className={styles.QueueItem}>\n        <span>\n          {indent}\n          {!queue.isDeleted && (queue.trackName || queue.collectionName)}\n        </span>\n        {!queue.isDeleted && queue.depth === 0 &&\n          <button type=\"button\" onClick={async (e) => { await this.props.destroy(this.props.data.uuid); }}>\n            Delete\n          </button>\n        }\n        {!queue.isDeleted && queue.depth === 1 &&\n          <button type=\"button\" onClick={async (e) => { await this.props.destroyChild(this.props.parentQueueUuid, this.props.data.uuid); }}>\n            Delete\n          </button>\n        }\n        {queue.children.length > 0 && !this.state.reveal &&\n          <button type=\"button\" onClick={this.toggleReveal}>\n            More\n          </button>\n        }\n        {queue.children.length > 0 && this.state.reveal &&\n          <>\n            <button type=\"button\" onClick={this.toggleReveal}>\n              Less\n            </button>\n            <div>\n              {queue.children.map((value, index) => (\n                <QueueItem key={index} data={value} destroy={this.props.destroy} destroyChild={this.props.destroyChild} parentQueueUuid={queue.uuid}></QueueItem>\n              ))}\n            </div>\n          </>\n        }\n      </div>\n    );\n  }\n\n}\n\nQueueItem.propTypes = {};\n\nQueueItem.defaultProps = {};\n\nexport default QueueItem;\n","import React from 'react';\nimport styles from './Queue.module.css';\nimport { fetchListQueues, fetchDeleteQueue } from './network'\nimport QueueItem from '../QueueItem/QueueItem'\n\n\nclass Queue extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      // Data\n      queues: [],\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.destroyQueueItem = this.destroyQueueItem.bind(this);\n    this.destroyChildQueueItem = this.destroyChildQueueItem.bind(this);\n  }\n\n  /*\n   * Load queues.\n   */\n  async componentDidMount() {\n    const jsonResponse = await fetchListQueues();\n    if(jsonResponse.system.status !== 200) {\n      this.errorMessage = jsonResponse.system.message;\n    } else {\n      const queues = jsonResponse.data;\n      this.setState({ queues: queues });\n      if(!queues.length) {\n        localStorage.setItem('lastQueueUuid', '');\n        return;\n      }\n      const lastQueueUuid = queues[queues.length - 1].uuid;\n      localStorage.setItem('lastQueueUuid', lastQueueUuid);\n    }\n  }\n\n  /*\n   * Called inside a child component, this first deletes the queue from the\n   * backend, then, on success, it deletes it from the front-end model and\n   * view.\n   */\n  async destroyQueueItem(queueUuid) {\n    await fetchDeleteQueue(queueUuid);\n    const queues = this.state.queues;\n    const filteredQueues = queues.filter(i => i.uuid !== queueUuid);\n    await this.setState({ queues: filteredQueues });\n  }\n\n  async destroyChildQueueItem(parentQueueUuid, childQueueUuid) {\n    await fetchDeleteQueue(childQueueUuid);\n\n    const queuesCopy = [...this.state.queues];\n    const parentIndex = queuesCopy.findIndex(i => i.uuid === parentQueueUuid);\n\n    const children = queuesCopy[parentIndex].children;\n    const filteredChildren = children.filter(i => i.uuid !== childQueueUuid);\n    queuesCopy[parentIndex].children = filteredChildren;\n\n    await this.setState({ queues: queuesCopy });\n  }\n\n  /*\n   * 🎨\n   */\n  render() {\n    return (\n      <div className={styles.Queue}>\n        <div>\n          {this.state.queues.map((value, index) => (\n            <QueueItem key={index} data={value} destroy={this.destroyQueueItem} destroyChild={this.destroyChildQueueItem}></QueueItem>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nQueue.propTypes = {};\n\nQueue.defaultProps = {};\n\nexport default Queue;\n","import { ENDPOINT_SEARCH_MUSIC, ENDPOINT_CREATE_QUEUE } from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchSearchMusicLibrary = async (query, providerSpotify, providerYouTube, providerJukeboxRadio, formatTrack, formatAlbum, formatPlaylist, formatVideo) => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_SEARCH_MUSIC,\n    {\n      query,\n      providerSpotify,\n      providerYouTube,\n      providerJukeboxRadio,\n      formatTrack,\n      formatAlbum,\n      formatPlaylist,\n      formatVideo,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n\n/*\n * Fetches an auth token from the server.\n */\nexport const fetchCreateQueue = async (className, genericUuid, prevQueueUuid, nextQueueUuid) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_QUEUE,\n    { className, genericUuid, prevQueueUuid, nextQueueUuid },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\n\n\nclass SearchResult extends React.Component {\n\n  render() {\n    const searchResult = this.props.data;\n    return (\n      <div>\n        <span>\n          {searchResult.provider} {searchResult.format} {searchResult.name}\n        </span>\n        <button type=\"button\" onClick={async (e) => { await this.props.addToQueue(this.props.data.class, this.props.data.uuid); }}>\n          Add\n        </button>\n      </div>\n    );\n  }\n}\n\nSearchResult.propTypes = {};\n\nSearchResult.defaultProps = {};\n\nexport default SearchResult;\n","import React from 'react';\nimport styles from './Search.module.css';\n\nimport { fetchSearchMusicLibrary, fetchCreateQueue } from './network';\nimport SearchResult from '../SearchResult/SearchResult'\n\n\nclass Search extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      searchResults: [],\n      // Form\n      query: '',\n      provider: {\n        spotify: true,\n        youTube: true,\n        jukeboxRadio: true,\n      },\n      format: {\n        track: true,\n        album: true,\n        playlist: true,\n        video: true,\n      },\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addToQueue = this.addToQueue.bind(this);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleCheckboxChange(event) {\n    const [key0, key1] = event.target.name.split('.'),\n          val = event.target.checked;\n\n    let obj = {};\n    obj[key0] = { ...this.state[key0]}\n    obj[key0][key1] = val;\n    this.setState(obj);\n  }\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  async handleSubmit(event) {\n    event.preventDefault();\n    const responseJson = await fetchSearchMusicLibrary(\n      this.state.query,\n      this.state.provider.spotify,\n      this.state.provider.youTube,\n      this.state.provider.jukeboxRadio,\n      this.state.format.track,\n      this.state.format.album,\n      this.state.format.playlist,\n      this.state.format.video,\n    );\n    this.setState({ searchResults: responseJson.data });\n  }\n\n  /*\n   * When...\n   */\n  async addToQueue(className, genericUuid) {\n    const prevQueueUuid = localStorage.getItem('lastQueueUuid') || null;\n    const nextQueueUuid = null;\n    await fetchCreateQueue(\n      className,\n      genericUuid,\n      prevQueueUuid,\n      nextQueueUuid\n    );\n    this.setState({ searchResults: [] });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className={styles.Login} onSubmit={async (e) => { await this.handleSubmit(e); }}>\n          <h3>Search</h3>\n\n          <label className={styles.FormBlock}>\n            Query\n            <input type=\"text\"\n                   name=\"query\"\n                   placeholder=\"Search by name or artist\"\n                   value={this.state.query}\n                   onChange={this.handleChange} />\n          </label>\n\n          <div className={styles.FormBlock}>\n            <label>\n              <input type=\"checkbox\"\n                     name=\"provider.spotify\"\n                     checked={this.state.provider.spotify}\n                     onChange={this.handleCheckboxChange} />\n              Spotify\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"provider.youTube\"\n                     checked={this.state.provider.youTube}\n                     onChange={this.handleCheckboxChange} />\n              YouTube\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"provider.jukeboxRadio\"\n                     checked={this.state.provider.jukeboxRadio}\n                     onChange={this.handleCheckboxChange} />\n              Jukebox Radio\n            </label>\n          </div>\n\n          <div className={styles.FormBlock}>\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.track\"\n                     checked={this.state.format.track}\n                     onChange={this.handleCheckboxChange} />\n              Track\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.album\"\n                     checked={this.state.format.album}\n                     onChange={this.handleCheckboxChange} />\n              Album\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.playlist\"\n                     checked={this.state.format.playlist}\n                     onChange={this.handleCheckboxChange} />\n              Playlist\n            </label>\n\n            <label>\n              <input type=\"checkbox\"\n                     name=\"format.video\"\n                     checked={this.state.format.video}\n                     onChange={this.handleCheckboxChange} />\n              Video\n            </label>\n          </div>\n\n          <div className={styles.FormBlock}>\n            <button type=\"submit\">\n              Search\n            </button>\n          </div>\n        </form>\n        <div>\n          {this.state.searchResults.map((value, index) => (\n            <SearchResult key={index} data={value} addToQueue={this.addToQueue}></SearchResult>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {};\n\nSearch.defaultProps = {};\n\nexport default Search;\n","import { ENDPOINT_CREATE_TRACK } from '../../config/api'\nimport { TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n/*\n * Fetches...\n */\nexport const fetchCreateTrack = async (audioFile, imageFile, trackName, artistName, albumName) => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_CREATE_TRACK,\n    {\n      audioFile: audioFile,\n      imageFile: imageFile,\n      trackName: trackName,\n      artistName: artistName,\n      albumName: albumName,\n    },\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n","import React from 'react';\nimport styles from './Upload.module.css';\n\nimport { fetchCreateTrack } from './network';\n\n\nclass Upload extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      errorMessage: null,\n      // Form\n      audioFile: '',\n      imageFile: '',\n      trackName: '',\n      artistName: '',\n      albumName: '',\n    };\n\n    // This binding is necessary to make `this` work in the callback.\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleFileChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.files[0];\n    this.setState(obj);\n  }\n\n  /*\n   * Ran when an element value has changed value. The data is updated in the\n   * model layer so the component may re-render.\n   */\n  handleChange(event) {\n    let obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  /*\n   * When the user initializes a login attempt.\n   */\n  async handleSubmit(event) {\n    event.preventDefault();\n    await fetchCreateTrack(\n      this.state.audioFile,\n      this.state.imageFile,\n      this.state.trackName,\n      this.state.artistName,\n      this.state.albumName,\n    );\n    this.setState({\n      trackName: '',\n      artistName: '',\n      albumName: '',\n    });\n  }\n\n  render() {\n    return (\n      <form className={styles.Login} onSubmit={async (e) => { await this.handleSubmit(e); }}>\n        <h3>Upload</h3>\n\n        <label className={styles.FormBlock}>\n          Audio file\n          <input type=\"file\"\n                 name=\"audioFile\"\n                 onChange={this.handleFileChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Image file\n          <input type=\"file\"\n                 name=\"imageFile\"\n                 onChange={this.handleFileChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Track name\n          <input type=\"text\"\n                 name=\"trackName\"\n                 placeholder=\"Track name\"\n                 value={this.state.trackName}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Artist name\n          <input type=\"text\"\n                 name=\"artistName\"\n                 placeholder=\"Artist name\"\n                 value={this.state.artistName}\n                 onChange={this.handleChange} />\n        </label>\n\n        <label className={styles.FormBlock}>\n          Album name\n          <input type=\"text\"\n                 name=\"albumName\"\n                 placeholder=\"Album name\"\n                 value={this.state.albumName}\n                 onChange={this.handleChange} />\n        </label>\n\n        <div className={styles.FormBlock}>\n          <button type=\"submit\">\n            Upload\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nUpload.propTypes = {};\n\nUpload.defaultProps = {};\n\nexport default Upload;\n","import {\n  ENDPOINT_GET_STREAM,\n  ENDPOINT_NEXT_TRACK,\n  ENDPOINT_PAUSE_TRACK,\n  ENDPOINT_PLAY_TRACK,\n  ENDPOINT_PREVIOUS_TRACK,\n  ENDPOINT_SCAN_BACKWARD,\n  ENDPOINT_SCAN_FORWARD,\n} from '../../config/api'\nimport { TYPE_GET, TYPE_POST } from '../../config/global'\nimport { fetchBackend } from '../../utils/network'\n\n\n/*\n * Fetches...\n */\nconst fetchStream = async () => {\n  const response = await fetchBackend(\n    TYPE_GET,\n    ENDPOINT_GET_STREAM,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchNextTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_NEXT_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPauseTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_PAUSE_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPlayTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_PLAY_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchPreviousTrack = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_PREVIOUS_TRACK,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchScanBackward = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_SCAN_BACKWARD,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\n/*\n * Fetches...\n */\nconst fetchScanForward = async () => {\n  const response = await fetchBackend(\n    TYPE_POST,\n    ENDPOINT_SCAN_FORWARD,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n};\n\nexport {\n  fetchStream,\n  fetchNextTrack,\n  fetchPauseTrack,\n  fetchPlayTrack,\n  fetchPreviousTrack,\n  fetchScanBackward,\n  fetchScanForward,\n}\n","import React from 'react';\nimport {\n  fetchStream,\n  fetchNextTrack,\n  fetchPauseTrack,\n  fetchPlayTrack,\n  fetchPreviousTrack,\n  fetchScanBackward,\n  fetchScanForward,\n} from './network'\n\n\nclass Player extends React.Component {\n\n  /*\n   * 🏗\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // UI\n      progress: undefined,\n      _nextTrackScheduledAt: undefined,\n      // Data\n      stream: undefined,\n    };\n\n    //\n    this.getStream = this.getStream.bind(this);\n    this.animateProgressBar = this.animateProgressBar.bind(this);\n    this.handlePrevTrack = this.handlePrevTrack.bind(this);\n    this.handleNextTrack = this.handleNextTrack.bind(this);\n    this.handlePlayTrack = this.handlePlayTrack.bind(this);\n    this.handlePauseTrack = this.handlePauseTrack.bind(this);\n    this.handleScanBackward = this.handleScanBackward.bind(this);\n    this.handleScanForward = this.handleScanForward.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStream();\n  }\n\n  async getStream() {\n    const jsonResponse = await fetchStream();\n    const stream = jsonResponse.data;\n    await this.setState({ stream: stream });\n    this.animateProgressBar();\n  }\n\n  animateProgressBar() {\n    const loop = () => {\n      const stream = this.state.stream;\n      if(!stream?.nowPlaying) {\n        this.setState({ progress: undefined, stream: undefined});\n        return;\n      } else if(!stream.isPlaying && stream.isPaused) {\n        this.setState({\n          progress: (stream.pausedAt * 1000) - (stream.playedAt * 1000),\n        });\n        return;\n      }\n\n      const date = new Date();\n      const epochNow = date.getTime();\n      const progress = epochNow - (stream.playedAt * 1000);\n\n      if(progress > (stream.nowPlaying.durationMilliseconds + 3000)) {\n        this.setState({ progress: undefined, stream: undefined});\n        return;\n      }\n\n      this.setState({\n        progress: progress,\n      });\n      window.requestAnimationFrame(loop);\n    };\n\n    loop();\n  }\n\n  // scheduleNextTrack() {\n  //   let nextTrackScheduledAt = this.state._nextTrackScheduledAt;\n  //   if(nextTrackScheduledAt) {\n  //     clearTimeout(nextTrackScheduledAt);\n  //   }\n  //\n  //   const stream = this.state.stream;\n  //   if(!stream?.isPlaying) {\n  //     this.setState({ _nextTrackScheduledAt: undefined });\n  //     return;\n  //   }\n  //\n  //   const date = new Date();\n  //   const epochNow = date.getTime();\n  //   const progress = epochNow - (stream.playedAt * 1000);\n  //   const durationMilliseconds = stream.nowPlaying.durationMilliseconds;\n  //\n  //   nextTrackScheduledAt = setTimeout(\n  //     this.handleNextTrack,\n  //     (durationMilliseconds - progress)\n  //   );\n  //   console.log(nextTrackScheduledAt)\n  //   this.setState({ _nextTrackScheduledAt: nextTrackScheduledAt });\n  // }\n\n  /*\n   * When...\n   */\n  async handlePrevTrack(event) {\n    event.preventDefault();\n\n    await fetchPreviousTrack();\n\n    await this.getStream();\n  }\n\n  /*\n   * When...\n   */\n  async handleNextTrack(event) {\n    if(event) {\n      event.preventDefault();\n    }\n\n    await fetchNextTrack();\n\n    await this.getStream();\n  }\n\n  /*\n   * When...\n   */\n  async handlePlayTrack(event) {\n    event.preventDefault();\n\n    const stream = this.state.stream;\n    const jsonResponse = await fetchPlayTrack();\n    await this.setState({\n      stream: {\n        ...stream,\n        isPlaying: true,\n        isPaused: false,\n        playedAt: jsonResponse.data.playedAt,\n      }\n    });\n\n    this.animateProgressBar();\n  }\n\n  /*\n   * When...\n   */\n  async handlePauseTrack(event) {\n    event.preventDefault();\n\n    const stream = this.state.stream;\n    const jsonResponse = await fetchPauseTrack();\n    await this.setState({\n      stream: {\n        ...stream,\n        isPlaying: false,\n        isPaused: true,\n        pausedAt: jsonResponse.data.pausedAt,\n      }\n    });\n  }\n\n  /*\n   * When...\n   */\n  async handleScanBackward(event) {\n    event.preventDefault();\n\n    const stream = this.state.stream;\n    await fetchScanBackward();\n\n    const date = new Date();\n    const epochNow = date.getTime();\n\n    const proposedPlayedAt = stream.playedAt + 10 ;\n    const proposedProgress = epochNow - (proposedPlayedAt * 1000);\n    const playedAt = proposedProgress > 0 ? proposedPlayedAt : Math.floor(epochNow / 1000);\n\n    await this.setState( {stream: { ...stream, playedAt: playedAt } });\n  }\n\n  /*\n   * When...\n   */\n  async handleScanForward(event) {\n    event.preventDefault();\n\n    const responseJson = await fetchScanForward();\n    if(responseJson.system.status !== 200) {\n      throw responseJson.system.message;\n    }\n\n    const stream = this.state.stream;\n    await this.setState( {stream: { ...stream, playedAt: stream.playedAt - (10) } });\n  }\n\n  render() {\n    const stream = this.state.stream;\n    return (\n      <>\n        <div>\n          {(stream?.isPlaying || stream?.isPaused) &&\n            <p>{stream?.nowPlaying?.name}</p>\n          }\n          <progress value={this.state.progress} max={stream?.nowPlaying?.durationMilliseconds}></progress>\n        </div>\n        <div>\n          <button onClick={this.handlePrevTrack}>Prev</button>\n          {stream?.isPaused &&\n            <button onClick={this.handlePlayTrack}>Play</button>\n          }\n          {stream?.isPlaying &&\n            <button onClick={this.handlePauseTrack}>Pause</button>\n          }\n          <button onClick={this.handleNextTrack}>Next</button>\n        </div>\n        <div>\n          {(stream?.isPlaying) &&\n            <button onClick={this.handleScanBackward}>Backward</button>\n          }\n          {(stream?.isPlaying) &&\n            <button onClick={this.handleScanForward}>Forward</button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nPlayer.propTypes = {};\n\nPlayer.defaultProps = {};\n\nexport default Player;\n","import './App.css';\nimport Chat from './components/Chat/Chat'\nimport Login from './components/Login/Login'\nimport Queue from './components/Queue/Queue'\nimport Search from './components/Search/Search'\nimport Upload from './components/Upload/Upload'\nimport Player from './components/Player/Player'\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n\n        {/* nav bar */}\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            <li>\n              <Link to=\"/player\">Player</Link>\n            </li>\n            <li>\n              <Link to=\"/queue\">Queue</Link>\n            </li>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n            <li>\n              <Link to=\"/upload\">Upload</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* main section */}\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/chat\">\n            <Chat />\n          </Route>\n          <Route path=\"/player\">\n            <Player />\n          </Route>\n          <Route path=\"/queue\">\n            <Queue />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}